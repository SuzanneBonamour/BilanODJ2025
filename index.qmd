---
title: "Bilan ODJ 2025 : comparaison STOC & SHOC"
format: 
  html :
    toc: true
editor: visual
---

```{r}
#| include: false
library(readr)
library(tidyverse)
library(DT)
library(dplyr)
library(extrafont)
library(ggthemes)
library(ggplot2)
library(grid)
library(ggtext)
```

```{r}
#| include: false

####COLOR ODJ 

ColW_Bleue<-"#4B6C8D"
ColS_Vert<-"#72A603"
GrisClair<-"#F2F2F2"
GrisFoncé<-"#4F4F4F"

colfunc <- colorRampPalette(c(ColW_Bleue, "#B4C6D9"))
colfunc(45)

###GRAPH SPEC

dodgewidth <- position_dodge(width=0.9)

theme_histo<-function (base_size = 12, color = "white", base_family = "Source Sans Pro", title_family = "Source Sans Pro") {
  colorhex <- ggthemes::ggthemes_data$wsj$bg[color]
  theme_foundation(base_size = base_size, base_family = base_family) + 
    theme(line = element_line(linetype = 1, colour = "black"), rect = element_rect(fill = colorhex, linetype = 0, colour = NA), text = element_text(colour = "black"), title = element_text(family = title_family, size = rel(1)), axis.title.x=element_blank(),axis.title.y = element_text(family = title_family, size = rel(1),), axis.text =   element_text(face = "plain", size = rel(1)), axis.text.x = element_text(colour= NULL), axis.text.y = element_text(colour = NULL), axis.ticks = element_line(colour = NULL), axis.ticks.y = element_blank(), axis.ticks.x = element_line(colour = NULL), axis.line = element_line(), axis.line.y = element_blank(), legend.background = element_rect(), legend.position = "top", legend.direction = "horizontal", legend.box = "vertical", panel.grid = element_line(colour = NULL, linetype = 3), panel.grid.major = element_line(colour = GrisFoncé), panel.grid.major.x = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0, face = "bold"), plot.margin = unit(c(1, 1, 1, 1), "lines"), strip.background = element_rect(),strip.text = element_text(hjust = 0.1, face = "bold",colour=GrisFoncé,size = rel(1)),plot.subtitle=element_text(hjust = 0, face = "bold",colour=GrisFoncé,size = rel(1)))
}

theme_trends<-function (base_size = 12, color = "white", base_family = "Source Sans Pro", title_family = "Source Sans Pro") {
  colorhex <- ggthemes::ggthemes_data$wsj$bg[color]
  theme_foundation(base_size = base_size, base_family = base_family) + 
    theme(line = element_line(linetype = 1, colour = "black"), rect = element_rect(fill = colorhex, linetype = 0, colour = NA), text = element_text(colour = "black"), title = element_text(family = title_family, size = rel(1)), axis.title.x=element_blank(),axis.title.y = element_text(family = title_family, size = rel(1),), axis.text =   element_text(face = "plain", size = rel(1)), axis.text.x = element_text(colour= NULL), axis.text.y = element_text(colour = NULL), axis.ticks = element_line(colour = NULL), axis.ticks.y = element_blank(), axis.ticks.x = element_line(colour = NULL), axis.line = element_line(), axis.line.y = element_blank(), legend.background = element_rect(), legend.position = "top", legend.direction = "horizontal", legend.box = "vertical", panel.grid = element_line(colour = NULL, linetype = 3), panel.grid.major = element_line(colour = GrisFoncé), panel.grid.major.x = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0, face = "bold",margin=margin(0,0,15,0)), plot.margin = unit(c(1, 1, 1, 1), "lines"), strip.background = element_rect(),plot.subtitle = element_text(hjust = 0, face = "bold",colour=GrisFoncé,size = rel(1)))
}

theme_bump<-function (base_size = 12, color = "white", base_family = "Source Sans Pro", title_family = "Source Sans Pro") {
  colorhex <- ggthemes::ggthemes_data$wsj$bg[color]
  theme_foundation(base_size = base_size, base_family = base_family) + 
    theme(line = element_line(linetype = 1, colour = "black"), rect = element_rect(fill = colorhex, linetype = 0, colour = NA), text = element_text(colour = "black"), title = element_text(family = title_family, size = rel(1)), axis.title.x=element_blank(),axis.title.y = element_blank(), axis.text =   element_blank(), axis.text.x = element_text(colour= NULL,size = rel(1),face = "bold"), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.ticks.y = element_blank(), axis.ticks.x = element_blank(), axis.line = element_blank(), axis.line.y = element_blank(), legend.background = element_rect(), legend.position = "top", legend.direction = "horizontal", legend.box = "vertical", panel.grid = element_line(colour = NULL, linetype = 3), panel.grid.major = element_blank(), panel.grid.major.x = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0, face = "bold"), plot.margin = unit(c(1, 1, 1, 1), "lines"), strip.background = element_rect(),strip.text = element_text(hjust = 0.1, face = "bold",colour=GrisFoncé,size = rel(1)))
}

```

## Contenu

Tendances ODJ et comparaison avec les observatoires STOC et SHOC

## Description du projet de comparaison du ODJ avec STOC et SHOC

**Texte V1** :

Grâce aux observations régulières récoltées dans le cadre d’Oiseaux des Jardins, nous pouvons aujourd’hui comparer les données issues des jardins celles d’autres suivis de sciences participatives menés par des ornithologues confirmés. Cette comparaison apporte des enseignements précieux sur la manière dont évoluent les populations d’oiseaux en France.

En confrontant les données de l'Observatoire ODJ avec deux autres grands protocoles scientifiques depuis il y a plus d'une décennie - le Suivi Temporel des Oiseaux Communs (STOC) au printemps et Suivi Hivernal des Oiseaux Communs (SHOC) en hiver - , nous avons cherché à savoir si les tendances observées par le grand public dans les jardins reflètent bien celles constatées par les spécialistes sur le terrain. 

Ce travail préliminaire a été mené de front par Marion Goascoz lors de stage de fin d'étude en 2025 (Master 2 Bidiversité-Ecologie-Evolution BEE, Sorbonne Université, Université Paris-Saclay, Muséum National d'Histoire Naturelle MNHN), co-encadrée par Charles Thévenin (CESCO, MNHN), Suzanne Bonamour (LPO France) et Benoit Fontaine (CESCO, MNHN, OFB).

Les résultats sont très encourageants (bien qu'encore à préciser sur le plus long terme) : dans de nombreux cas, vos observations aboutissent à des tendances equivalents sur les mêmes périodes d'étude, ce qui montre la grande valeur scientifique de l'Observatoire ODJ bien qu'alimenté par des Ornithologues pour la plupart débutants.

Bien sûr, certaines différences apparaissent. En hiver par exemple, la présence de mangeoires attire davantage d’oiseaux dans les jardins, ce qui peut expliquer des écarts avec le suivi SHOC. De même, les habitats étudiés ne sont pas toujours les mêmes : les protocoles d’experts couvrent souvent des zones rurales ou naturelles, tandis qu’ODJ reflète les dynamiques de populations des oiseaux en jardin, et donc en milieu urbain ou périurbain. Ces différences sont intéressantes, car elles permettent de mieux comprendre comment les oiseaux s’adaptent à des environnements variés.

Ce travail confirme que vos comptages ne sont pas seulement utiles localement : ils s’intègrent dans un ensemble plus large et apportent une pièce essentielle au puzzle de la biodiversité. Sans la collecte massive de données pour l'Observatoire des oiseaux des jardins, les chercheurs n’auraient pas accès à cette richesse d’informations, ce qui est particulièrement vrai dans les jardins privés.

En somme, les observations ODJ complètent et enrichissent celles des experts. Ensemble, elles permettent d'obtenir une vision plus fine et plus complète de la dynamique des populations d’oiseaux en France, indispensable pour leur suivi et leur protection.

**texte v2 raccoucie :**

Grâce à vos observations régulières dans le cadre d’Oiseaux des Jardins, nous avons pu comparer ces données à celles issues de suivis menés par des ornithologues confirmés. Cette comparaison apporte des enseignements précieux sur l’évolution des populations d’oiseaux en France.

Le travail, réalisé en 2025 par Marion Goascoz (Master 2 BEE, Sorbonne Université, Université Paris-Saclay, MNHN) avec l’appui de la LPO et du CESCO, a confronté ODJ à deux grands protocoles scientifiques : le STOC (printemps) et le SHOC (hiver). Les résultats sont très encourageants : dans de nombreux cas, vos observations aboutissent à des tendances equivalents à celles des spécialistes, confirmant la grande valeur scientifique d’ODJ, même si la majorité des participants sont des débutants.

Certaines différences existent, notamment en hiver où les mangeoires attirent davantage d’oiseaux, ou parce que les habitats étudiés diffèrent (zones naturelles pour STOC/SHOC, jardins urbains pour ODJ). Mais loin d’être des limites, ces contrastes permettent de mieux comprendre comment les oiseaux s’adaptent à des environnements variés.

Vos comptages ne sont donc pas seulement utiles à l’échelle de votre jardin : ils complètent et enrichissent les suivis des experts, offrant ensemble une vision plus complète des dynamiques d’oiseaux en France, essentielle pour leur protection.

*Pour inspiration :*

*Résumé Marion :*

*"Ce mémoire compare les tendances temporelles d’abondance d’oiseaux communs issues de trois protocoles de sciences participatives : STOC, SHOC (naturalistes) et ODJ (grand public). L’objectif est d’évaluer la cohérence des tendances entre ces programmes, bien que leurs approches méthodologiques et leur public diffèrent. Les résultats montrent qu’environ la moitié des tendances estimées sont equivalents entre ODJ et SHOC (hiver), mais moins nombreuses avec le STOC (printemps). Les différences peuvent s’expliquer par des biais d’échantillonnage, l’écologie des espèces (ex. présence de mangeoires) et le niveau d'expertise des observateurs. Notre étude suggère que les données du protocole ODJ, malgré leurs limites, sont utiles pour suivre les dynamiques de populations urbaines. Des améliorations méthodologiques sont proposées pour affiner l’interprétation de ces tendances divergentes."*

*Intro Marion :*

*"Au cours des 300 dernières années, les extinctions recensées pour certains groupes d'organismes révèlent des taux d'extinction au moins plusieurs centaines de fois supérieurs à ceux attendus d’après les archives géologiques \[1\]. Des suivis à grande échelle sont donc essentiels afin de mesurer les dynamiques des populations et déterminer comment la biodiversité est impactée par les divers changements globaux. En France, l’abondance globale des oiseaux a diminué de 33 % entre 1989 et 2017 (voir les résultats du bilan du Suivi Temporel des Oiseaux Communs, coordonné par le CESCO et l’UMS Patrinat, 2018). Les oiseaux sont de bons indicateurs de biodiversité : ils disposent d’une large répartition, de comportement et d’écologie bien connue \[2,3\]. En réponse aux changements globaux, des effets sur leurs populations sont d’ores et déjà visibles avec des modifications de leur répartition et de leur phénologie \[2,3\]. Chez plusieurs espèces d’oiseaux cela provoque des changements significatifs dans la composition de leurs communautés avec des populations en déclin et augmentation \[4\]. Les oiseaux sont également situés à des niveaux trophiques élevés, leurs tendances démographiques peuvent donc souvent refléter celles d’autres taxons \[2\]. L’observation des oiseaux étant très populaire auprès du grand public, les projets de suivi des oiseaux comptent parmi les plus réussis en matière de sciences participatives \[5\].*

*Les sciences participatives sont une approche de plus en plus reconnue et appliquée dans de nombreux domaines scientifiques \[6\]. Particulièrement dans les sciences environnementales et écologiques, où des participants non professionnels contribuent à la collecte de données pour faire avancer la recherche scientifique \[6\]. Par exemple, les sciences participatives axées sur le suivi des espèces ont fourni au moins 50 % des observations aux bases de données internationales sur la biodiversité, telles que le Global Biodiversity Information Facility (GBIF) \[6\]. En effet, les données d’occurrence et d’abondance sont difficiles à collecter à large échelle spatiale et sur le long terme ; avoir recours aux sciences participatives est donc un avantage certain en termes de protocole d’échantillonnage et de coûts \[4\]. De plus, avoir recours aux sciences participatives permet parfois d’avoir accès à des milieux peu accessibles par les scientifiques. Les sciences participatives en sciences écologiques peuvent avoir pour objectif de documenter l’état de santé des populations naturelles, contribuant ainsi aux listes rouges UICN \[7\], ce qui permet d’orienter quant aux futures actions de conservation \[8\]. Cependant les sciences participatives présentent plusieurs limites, notamment le maintien de l'engagement des participants et les biais liés à la récolte des données \[6,9\]. Un biais important concerne la qualité des données collectées par les citoyen.ne.s incluant la variabilité des niveaux de compétence parmi les volontaires et la sous-déclaration des résultats négatifs \[5,9\]. Un autre type de biais, relatif à l’échantillonnage, est lié à la densité de population : les zones plus densément peuplées ont tendance à être prospectées plus fréquemment \[6\].*

*En France, plusieurs programmes de sciences participatives existent tel que le Suivi Temporel des Oiseaux Communs (STOC). Ce suivi constitue le plus ancien protocole scientifique français établi en 1989 afin d’évaluer l’état des populations d’oiseaux communs nicheurs par la production de tendances spécifiques \[7\]. Depuis le début, le nombre de participants a augmenté chaque année de 0.55% en moyenne. Le pourcentage des participants qui n’a envoyé des données que pendant une seule année est de 0 % puisque les sites suivis une seule année sont retirés, 17% pendant deux ans, et 83% pendant plus de deux ans. En 2006 a débuté un autre protocole, le Suivi Hivernal des Oiseaux Communs (SHOC) afin d’étudier la dynamique des populations hivernantes en France \[10\]. Depuis le début, le nombre de participants a augmenté chaque année de 2 %. Le pourcentage de participants qui n’a envoyé des données que pendant une seule année est de 5.2 %, de 33.1% pendant deux ans, et 61.6 % pendant plus de deux ans. La finalité des protocoles STOC et SHOC est de permettre d’analyser les tendances d’abondances des espèces, à savoir le nombre d’individus comptés au cours du temps \[2\]. On s’intéresse à travers ces protocoles aux abondances relatives et leur évolution temporelle, et non aux abondances absolues des populations \[7\].*

*En Europe, les oiseaux migrateurs à courte distance et les sédentaires sont contraints de trouver leurs ressources dans des paysages dominés par l’activité humaine, tels que les zones urbaines et les paysages agricoles intensifs \[10\]. En hiver, les mangeoires de jardin peuvent fournir une quantité non négligeable de nourriture supplémentaire, principalement des graines \[10\]. Les jardins privés représentent une proportion importante des espaces verts en milieu urbain \[11\]. Toutefois, l’accès à ces jardins à grande échelle à des fins de recherche est difficile, car ils sont privés. Rassembler des personnes pour suivre les oiseaux dans leur jardin (c’est-à-dire via les sciences participatives) constitue donc une bonne manière de surmonter ce problème \[10\]. D’autant plus qu’au cours du dernier siècle on a pu observer une augmentation rapide du rythme de l’urbanisation dans de nombreux pays \[12\]. Il a notamment été démontré que les populations urbaines d’oiseaux tendent à avoir des densités de population plus élevées \[13,14\]. En revanche, les tendances des populations d'oiseaux sont significativement plus négatives en milieu urbain que dans d'autres habitats \[15\]. Cependant, les zones urbaines évoluent rapidement et par conséquent, des fluctuations de l’abondance des populations d’oiseaux urbains sont susceptibles de se produire \[13\].*

*L’Observatoire participatif “Oiseaux Des Jardins” (ODJ) est un programme de sciences participatives co-géré par la Ligue pour la Protection des Oiseaux (LPO) et le Muséum National d’Histoire Naturelle (MNHN, Paris), ayant commencé au printemps 2012. L’objectif de ce programme grand public est d’enregistrer l’abondance des espèces dans les jardins privés et publics tout au long de l’année, à l’échelle nationale. On comptabilise au total 48 espèces visées par l’observatoire ODJ, dont une uniquement observée l’hiver, le pinson du nord, et quatre à partir du printemps à savoir l’hirondelle rustique, l’hirondelle de fenêtre, le martinet noir et la huppe fasciée. A ce jour, 85 231 participants ont transmis des données au moins une fois, couvrant l’ensemble du territoire (Figure 2). Depuis le début, le nombre de participants a augmenté chaque année de 1.28 % en moyenne. La majorité des participants n’a envoyé des données que pendant une seule année soit 67.6%, 14.6 % pendant deux ans, et 17.8% pendant plus de deux ans. ODJ demeure le programme de science participative du MNHN comptabilisant le taux de fidélisation et de recrutement le plus élevé \[2\], ce qui en fait donc un des programmes possédant la plus grande base de données.*

*A ce jour, on estime que plus de 70% des chercheurs ne réussissent pas à reproduire les expériences d’autres scientifiques et plus de la moitié échouent à reproduire leurs propres expériences \[16\]. Il est donc primordial de vérifier si les tendances spécifiques estimées de nos populations d’oiseaux via le STOC et le SHOC sont corroborées par les données d’autres protocoles nationaux comme ODJ. De plus, les tendances pour une même espèce peuvent différer selon les saisons. En effet, pour des espèces migratrices, les protocoles d’échantillonnage en hiver viseront des populations d’individus en migration hivernale tandis que les protocoles de printemps recueilleront des données sur des individus résidents et se reproduisant sur le territoire. Sur ce point, les protocoles ODJ printemps/STOC ainsi qu’ODJ hiver/SHOC échantillonnent des populations semblables. A la différence des protocoles STOC et SHOC qui reposent sur les observations d’ornithologues confirmés, le programme ODJ fait appel majoritairement à des néophytes. A cela s’ajoute le biais géographique d’échantillonnage plus concentré dans les jardins de zones urbaines pour le protocole ODJ. Comparer les tendances selon la même méthode d’estimation des tendances suivant différents protocoles et observateurs devrait confirmer les estimations établies. On souhaite donc savoir si l’on observe des différences dans les tendances temporelles d’abondance, calculées selon la même méthode, à partir de différents protocoles de suivi. On suppose que malgré la différence de niveau des participants et le biais géographique que la majorité des tendances estimées seront equivalents. En effet, ces tendances seront déterminées suivant la même méthode pour les différents protocoles et sur des périodes d’échantillonnage semblable, donc les tendances devraient être majoritairement équivalentes. En revanche, on pourrait s’attendre à observer davantage de différence dans les tendances estimées en hiver où la présence de mangeoire et de nourriture croissante (achat de graines en augmentation sur le site LPO) dans les jardins constitue un effet attracteur important qu’on ne retrouvera pas dans les milieux échantillonnés par le SHOC. En partie pour cette raison, les tendances spécifiques sont susceptibles de varier entre les saisons hivernale et printanière mais également dû à une détection plus faible en hiver."*

## Données

```{r}
#| include: false
comparaison_ODJ_STOC <- read_delim("1) data/longTermTrends-Comparaison-ODJ-STOC.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE)

comparaison_ODJ_SHOC <- read_delim("1) data/longTermTrends-Comparaison-ODJ-SHOC.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE)

# On garde que les espèces dans ODJ ---

list_dans_ODJ <- c("Troglodyte mignon", "Accenteur mouchet", "Rougegorge familier", "Moineau domestique",
    "Verdier d'Europe", "Tarin des aulnes", "Chardonneret élégant", "Pinson des arbres", "Mésange charbonnière",
    "Mésange bleue", "Sittelle torchepot", "Hirondelle rustique", "Grive musicienne", "Étourneau sansonnet",
    "Merle noir", "Corneille noire", "Pigeon biset domestique", "Pigeon ramier", "Tourterelle turque",
    "Pie bavarde", "Roitelet huppé", "Bergeronnette grise", "Mésange nonnette", "Mésange huppée",
    "Mésange à longue queue", "Fauvette à tête noire", "Rougequeue noir", "Rougequeue à front blanc",
    "Grive mauvis", "Grive draine", "Serin cini", "Bruant jaune", "Bouvreuil pivoine", "Linotte mélodieuse",
    "Pinson du Nord", "Bruant zizi", "Grosbec casse-noyaux", "Pic vert", "Pic épeiche", "Pic épeichette",
    "Grimpereau des jardins", "Hirondelle de fenêtre", "Martinet noir", "Choucas des tours", "Huppe fasciée",
    "Geai des chênes", "Épervier d'Europe", "Perruche à collier", "Gobemouche gris", "Moineau friquet", 
    "Mésange noire", "Pouillot véloce")

comparaison_ODJ_STOC <- comparaison_ODJ_STOC %>% 
  filter(species %in% list_dans_ODJ)

comparaison_ODJ_SHOC <- comparaison_ODJ_SHOC %>% 
  filter(species %in% list_dans_ODJ)

# colonnes tendance_bilan ---

comparaison_ODJ_STOC <- comparaison_ODJ_STOC %>% 
  mutate(tendance_bilan = case_when(
    trend %in% c("D\xe9clin mod\xe9r\xe9", "D\xe9clin fort", "D\xe9clin mod\xe9r\xe9 \xe0 fort", 
                 "Déclin fort", "Déclin modéré", "Déclin modéré à fort") ~ "déclin",
    trend %in% c("Augmentation forte", "Augmentation mod\xe9r\xe9e", 
                 "Augmentation mod\xe9r\xe9e \xe0 forte", "Augmentation modérée", 
                 "Augmentation modérée à forte") ~ "augmentation",
    trend %in% c("Incertain") ~ "incertain",
    trend %in% c("Stable") ~ "stable",
    TRUE ~ "autre"
  ))

table(comparaison_ODJ_STOC$tendance_bilan)

comparaison_ODJ_SHOC <- comparaison_ODJ_SHOC %>% 
  mutate(tendance_bilan = case_when(
    trend %in% c("D\xe9clin mod\xe9r\xe9", "D\xe9clin fort", "D\xe9clin mod\xe9r\xe9 \xe0 fort", 
                 "Déclin fort", "Déclin modéré", "Déclin modéré à fort") ~ "déclin",
    trend %in% c("Augmentation forte", "Augmentation mod\xe9r\xe9e", 
                 "Augmentation mod\xe9r\xe9e \xe0 forte", "Augmentation modérée", 
                 "Augmentation modérée à forte") ~ "augmentation",
    trend %in% c("Incertain") ~ "incertain",
    trend %in% c("Stable") ~ "stable",
    TRUE ~ "autre"
  ))

table(comparaison_ODJ_SHOC$tendance_bilan)

```

## Listes des espèces comparées

### ODJ-STOC

```{r}
#| include: false

# ODJ-STOC

liste_esp_ODJ_STOC_1 <- comparaison_ODJ_STOC %>% 
  filter(Comparaison !="Incertain") %>% 
  dplyr::select(species) %>% 
  distinct()

```

Nombre d'espèce pour lesquelles il est possible de compararer les tendances temporelles entre les observatoires ODJ et STOC (sans comparaison intercertaine) : `r length(liste_esp_ODJ_STOC_1$species)`

Listes des espèces comparées :

```{r echo=FALSE, message=FALSE}

# Click table
liste_esp_ODJ_STOC_1 %>%
  datatable(extensions = 'Buttons',
            options = list(dom = 'Blfrtip',
                           buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
                           lengthMenu = list(c(10,25,50,-1),
                                             c(10,25,50,"All"))))
```

### ODJ-SHOC

```{r}
#| include: false

# ODJ-SHOC

liste_esp_ODJ_SHOC_1 <- comparaison_ODJ_SHOC %>% 
  filter(Comparaison !="Incertain") %>% 
  dplyr::select(species) %>% 
  distinct()

```

Nombre d'espèce pour lesquelles il est possible de compararer les tendances temporelles entre les observatoires ODJ et SHOC (sans comparaison intercertaine) : `r length(liste_esp_ODJ_SHOC_1$species)`

Listes des espèces comparées :

```{r echo=FALSE, message=FALSE}

# Click table
liste_esp_ODJ_SHOC_1 %>%
  datatable(extensions = 'Buttons',
            options = list(dom = 'Blfrtip',
                           buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
                           lengthMenu = list(c(10,25,50,-1),
                                             c(10,25,50,"All"))))
```

## Comparaison des tendances

### ODJ-STOC

```{r}
#| echo: false
#| warning: false
#| fig-height: 4
#| fig-width: 8

equivalent_ODJ_STOC <- comparaison_ODJ_STOC %>% 
  filter(Comparaison !="Incertain") %>% 
  mutate(comparaison_bilan2025 = case_when(Comparaison == "Different" ~ "Equivalent",
                                           Comparaison == "Similaire" ~ "Equivalent",
                                           TRUE ~ Comparaison)) %>% 
  dplyr::select(species, Protocole, comparaison_bilan2025) 

list_esp_oppose_ODJ_STOC <- unique(equivalent_ODJ_STOC$species[equivalent_ODJ_STOC$comparaison_bilan2025=="Oppose"])
  
# table(equivalent_ODJ_STOC$comparaison_bilan2025)

# Préparation des données
data_pie <- equivalent_ODJ_STOC %>%
  distinct(species, comparaison_bilan2025) %>%  # éviter les doublons
  count(comparaison_bilan2025) %>%              
  mutate(pct = n / sum(n) * 100,
         lbl = paste0(n, " espèces\n", sprintf("%.1f", pct), "%"))

# Graphique en donut
ggplot(data_pie, aes(x = 2, y = pct, fill = comparaison_bilan2025)) +
  geom_col(width = 1, color = "white", show.legend = TRUE) +
  coord_polar(theta = "y") +
  geom_text(aes(label = lbl), 
            position = position_stack(vjust = 0.5), 
            size = 5, fontface = "bold", color = "white") +
  xlim(0.8, 2.5) +  # crée le trou au centre
  scale_fill_manual(values = c("Equivalent" = "darkgreen", "Oppose" = "pink")) +
  theme_void() +
  ggtitle("Comparaison des tendances démographiques ODJ - STOC") +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    legend.title = element_blank()
  )

```
Espèces pour lesquelles les estimations de tendances démographiques sont opposées entre les Observatoires ODJ et STOC : `r list_esp_oppose_ODJ_STOC`

### ODJ-SHOC

```{r}
#| echo: false
#| warning: false
#| fig-height: 4
#| fig-width: 8

equivalent_ODJ_SHOC <- comparaison_ODJ_SHOC %>% 
  filter(Comparaison !="Incertain") %>% 
  mutate(comparaison_bilan2025 = case_when(Comparaison == "Different" ~ "Equivalent",
                                           Comparaison == "Similaire" ~ "Equivalent",
                                           TRUE ~ Comparaison)) %>% 
  dplyr::select(species, Protocole, comparaison_bilan2025) 

list_esp_oppose_ODJ_SHOC <- unique(equivalent_ODJ_SHOC$species[equivalent_ODJ_SHOC$comparaison_bilan2025=="Oppose"])

# table(equivalent_ODJ_SHOC$comparaison_bilan2025)

# Préparation des données
data_pie <- equivalent_ODJ_SHOC %>%
  distinct(species, comparaison_bilan2025) %>%  # éviter les doublons
  count(comparaison_bilan2025) %>%              
  mutate(pct = n / sum(n) * 100,
         lbl = paste0(n, " espèces\n", sprintf("%.1f", pct), "%"))

# Graphique en donut
ggplot(data_pie, aes(x = 2, y = pct, fill = comparaison_bilan2025)) +
  geom_col(width = 1, color = "white", show.legend = TRUE) +
  coord_polar(theta = "y") +
  geom_text(aes(label = lbl), 
            position = position_stack(vjust = 0.5), 
            size = 5, fontface = "bold", color = "white") +
  xlim(0.8, 2.5) +  # crée le trou au centre
  scale_fill_manual(values = c("Equivalent" = "darkblue", "Oppose" = "pink")) +
  theme_void() +
  ggtitle("Comparaison des tendances démographiques ODJ - SHOC") +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    legend.title = element_blank()
  )

```
Espèces pour lesquelles les estimations de tendances démographiques sont opposées entre les Observatoires ODJ et SHOC : `r list_esp_oppose_ODJ_SHOC`

## Interprétation des résultats

### !!! ODJ-STOC

Bien préciser que cela ouvre de nouvelles pistes d’analyse et de suivi. On illustre cela avec quelques exemples (texte)

Bien mettre en avant que le pourcentage d’opposé est plus faible que le equivalent (texte)

### !!! ODJ-SHOC

Bien préciser que cela ouvre de nouvelles pistes d’analyse et de suivi. On illustre cela avec quelques exemples (texte)

Bien mettre en avant que le pourcentage d’opposé est plus faible que le equivalent (texte)

## Exemple d'espèce à mettre en avant

*ATTENTION : penser à bien revérifier les tendances du STOC et SHOC qui seront publiées dans le rapport qui sortira à l’automne*

```{r}
#| include: false
dataLongTerm <- read.csv("1) data/longTermTrends_esp_BILAN2025.txt", comment.char="#")

dataLongTerm$species <- dataLongTerm$french_name

STOCdataLongTerm <- read.csv("1) data/STOC_longTermTrends_esp_BILAN2025.txt", comment.char="#")

STOCdataLongTerm$species <- STOCdataLongTerm$french_name
```

```{r}
#| echo: false
#| warning: false

plot_ODJ_STOC <- function(sp_vec, 
                          dataLongTerm, 
                          STOCdataLongTerm, 
                          y_limits = c(0.7, 1.4), 
                          y_breaks = seq(0.7, 1.4, by = 0.15),
                          color_stoc = "#006400",
                          out_dir = "figures",
                          save_plots = TRUE) {
  
  # Créer le dossier si besoin
  if (save_plots && !dir.exists(out_dir)) {
    dir.create(out_dir, recursive = TRUE)
  }
  
  plot_one_species <- function(sp) {
    sp <- as.character(sp)  # sécurité
    
    # --- ODJ -------------------------------------------------------------------
    dataLT_sp <- dataLongTerm[dataLongTerm$species == sp,] %>%
      dplyr::select(-trendEBCC) %>%
      na.omit()
    
    if (nrow(dataLT_sp) == 0) {
      message("⚠️ Pas de données ODJ pour : ", sp)
      return(NULL)
    }
    
    yearValues <- dataLT_sp$minYear:dataLT_sp$maxYear
    
    estLT <- dataLT_sp$estimate * (yearValues - min(yearValues))
    estLT <- estLT - mean(estLT)
    
    dataPlot <- data.frame(
      year = yearValues,
      estimate = exp(estLT),
      estimate_exp = exp(estLT),
      infIC = NA,
      supIC = NA,
      group = "LT",
      rep = 1
    )
    
    yRef <- 1
    
    # --- STOC ------------------------------------------------------------------
    dataLT_sp_STOC <- STOCdataLongTerm[STOCdataLongTerm$species == sp,] %>%
      dplyr::select(-trendEBCC) %>%
      na.omit()
    
    if (nrow(dataLT_sp_STOC) == 0) {
      message("⚠️ Pas de données STOC pour : ", sp)
      return(NULL)
    }
    
    yearValues_STOC <- dataLT_sp_STOC$minYear:dataLT_sp_STOC$maxYear
    
    estLT_STOC <- dataLT_sp_STOC$estimate * (yearValues_STOC - min(yearValues_STOC))
    estLT_STOC <- estLT_STOC - mean(estLT_STOC)
    
    dataPlot_STOC <- data.frame(
      year = yearValues_STOC,
      estimate = exp(estLT_STOC),
      estimate_exp = exp(estLT_STOC),
      infIC = NA,
      supIC = NA,
      group = "LT",
      rep = 1
    )
    
    # --- Infos pour le sous-titre ----------------------------------------------
    perc_odj  <- as.character(dataLT_sp$perc[1])
    inf_odj   <- as.character(dataLT_sp$infPerc[1])
    sup_odj   <- as.character(dataLT_sp$supPerc[1])
    
    perc_stoc <- as.character(dataLT_sp_STOC$perc[1])
    inf_stoc  <- as.character(dataLT_sp_STOC$infPerc[1])
    sup_stoc  <- as.character(dataLT_sp_STOC$supPerc[1])
    
    subtitle <- paste0(
      "<span style='color:black;'>ODJ : ", perc_odj,
      "% [", inf_odj, "% ; ", sup_odj, "%]</span><br>",
      "<span style='color:", color_stoc, ";'>STOC : ", perc_stoc,
      "% [", inf_stoc, "% ; ", sup_stoc, "%]</span>"
    )
    
    # --- significance (STOC seulement ici) -------------------------------------
    signLT_STOC <- dataLT_sp_STOC$pval
    xSignLT_STOC <- dataLT_sp_STOC$maxYear + 1 
    ySignLT_STOC <- mean(dataPlot_STOC$estimate[dataPlot_STOC$year == dataLT_sp_STOC$maxYear])
    
    # --- Plot ------------------------------------------------------------------
    p <- ggplot() +
      geom_hline(yintercept = yRef, col = "gray", linetype = "dashed", linewidth = 1.01) +
      geom_line(data = dataPlot, aes(x = year, y = estimate),
                alpha = 1, linewidth = 1.5, color = "black") +
      geom_line(data = dataPlot_STOC, aes(x = year, y = estimate),
                alpha = 1, linewidth = 1.5, color = color_stoc) +
      ggtitle(sp) +
      scale_x_continuous(
        breaks = yearValues,
        limits = c(dataLT_sp$minYear[1] - 0.5, dataLT_sp$maxYear[1] + 0.5)
      ) +
      scale_y_continuous(breaks = y_breaks, limits = y_limits) +
      theme_trends(base_size = 12, color = NA) +
      labs(
        title = sp,
        subtitle = subtitle,
        x = "Année",
        y = "Abondance relative",
        color = "Observatoire",
        fill = "Observatoire"
      ) +
      theme(
        axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
        legend.text = element_text(size = 14),
        axis.text = element_text(size = 14),
        axis.title = element_text(size = 18),
        title = element_text(size = 15),
        panel.grid.minor = element_blank(),
        legend.position = "top",
        legend.justification = "left",
        plot.subtitle = ggtext::element_markdown(size = 13, lineheight = 1.1)
      )
    
    # Ajouter étoile si pval < 0.05
    if (!is.na(signLT_STOC) && signLT_STOC < 0.05) {
      p <- p + annotate("text", label = "*", color = color_stoc, size = 6, 
                        x = xSignLT_STOC - 0.5, y = ySignLT_STOC + 0.02)
    }
    
    # --- Sauvegarde si demandé -------------------------------------------------
    if (save_plots) {
      safe_name <- str_replace_all(sp, "[^[:alnum:]_]", "_")   # nettoie accents et espaces
      file_base <- normalizePath(file.path(out_dir, safe_name), mustWork = FALSE)
      file_base <- as.character(file_base)  # forcer string simple
      
      tryCatch({
        ggsave(paste0(file_base, ".png"), p, width = 7, height = 5, dpi = 300)
        ggsave(paste0(file_base, ".svg"), p, width = 7, height = 5)
      }, error = function(e) {
        message("❌ Erreur lors de la sauvegarde pour : ", sp, " -> ", e$message)
      })
    }
    
    return(p)
  }
  
  # Générer et afficher chaque graphique
  plots <- lapply(sp_vec, plot_one_species)
  plots <- plots[!sapply(plots, is.null)]
  
  for (p in plots) print(p)  # affichage dans Quarto
  
  invisible(plots)
}

sp_vec <-c("Verdier d'Europe","Sittelle torchepot","Grosbec casse-noyaux","Rougegorge familier","Pinson des arbres")

plot_ODJ_STOC(sp_vec, dataLongTerm, STOCdataLongTerm, out_dir = "figures")



# plot_ODJ_STOC(sp_vec, dataLongTerm, STOCdataLongTerm, out_dir = "figures")

```

### Verdier d’Europe

#### ODJ-STOC

```{r}
#| echo: false
#| warning: false

sp = "Verdier d'Europe"

# ODJ --------------------------------------------------------------------------

dataLT_sp = dataLongTerm[dataLongTerm$species == sp,]
dataLT_sp <- dataLT_sp %>% dplyr::select(-trendEBCC)
dataLT_sp <- na.omit(dataLT_sp)

yearValues = dataLT_sp$minYear:dataLT_sp$maxYear
      
estLT = dataLT_sp$estimate * (yearValues - min(yearValues))
estLT = estLT - mean(estLT)

dataPlot = data.frame(year = yearValues,
                      estimate = exp(estLT),
                      estimate_exp = exp(estLT), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT <- round(dataLT_sp$pval,6)
xSignLT <- dataLT_sp$maxYear + 1 # x-position of the significance
ySignLT <- mean(dataPlot$estimate[dataPlot$year == dataLT_sp$maxYear]) # y-position of the significance

# --- growth rate ---
grLT = dataLT_sp$estimate
grLT = round(grLT, 3)
xGrLT = dataLT_sp$minYear - 1
yGrLT = mean(dataPlot$estimate[dataPlot$year == min(dataPlot$year)])

# STOC -------------------------------------------------------------------------

dataLT_sp_STOC = STOCdataLongTerm[STOCdataLongTerm$species == sp,]
dataLT_sp_STOC <- dataLT_sp_STOC %>% dplyr::select(-trendEBCC)
dataLT_sp_STOC <- na.omit(dataLT_sp_STOC)

yearValues_STOC = dataLT_sp_STOC$minYear:dataLT_sp_STOC$maxYear
      
estLT_STOC = dataLT_sp_STOC$estimate * (yearValues_STOC - min(yearValues_STOC))
estLT_STOC = estLT_STOC - mean(estLT_STOC)

dataPlot_STOC = data.frame(year = yearValues_STOC,
                      estimate = exp(estLT_STOC),
                      estimate_exp = exp(estLT_STOC), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef_STOC = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT_STOC <- round(dataLT_sp_STOC$pval,16)
xSignLT_STOC <- dataLT_sp_STOC$maxYear + 1 # x-position of the significance
ySignLT_STOC <- mean(dataPlot_STOC$estimate[dataPlot_STOC$year == dataLT_sp_STOC$maxYear]) # y-position of the significance

# plot -------------------------------------------------------------------------

# -> s'assurer que les valeurs sont scalaires (prend le 1er élément si vecteur)
perc_odj  <- as.character(dataLT_sp$perc[1])
inf_odj   <- as.character(dataLT_sp$infPerc[1])
sup_odj   <- as.character(dataLT_sp$supPerc[1])

perc_stoc <- as.character(dataLT_sp_STOC$perc[1])
inf_stoc  <- as.character(dataLT_sp_STOC$infPerc[1])
sup_stoc  <- as.character(dataLT_sp_STOC$supPerc[1])

# couleur en hex pour plus de sûreté
green_hex <- "#006400"  # darkgreen

subtitle <- paste0(
  "<span style='color:black;'>ODJ : ", perc_odj,
  "% [", inf_odj, "% ; ", sup_odj, "%]</span><br>",
  "<span style='color:", green_hex, ";'>STOC : ", perc_stoc,
  "% [", inf_stoc, "% ; ", sup_stoc, "%]</span>"
)

plot_verdier_ODJ_STOC = ggplot() +
  geom_hline(yintercept = yRef, col = "gray", linetype = "dashed", linewidth = 1.01) +
  # ODJ
  geom_line(data = dataPlot[dataPlot$group == "LT",], aes(x = year, y = estimate),
            alpha = 1, linewidth = 1.5, color = "black") +
  # STOC
  geom_line(data = dataPlot_STOC[dataPlot_STOC$group == "LT",], aes(x = year, y = estimate),
            alpha = 1, linewidth = 1.5, color = "darkgreen") +
  ggtitle(sp) +
  scale_x_continuous(breaks = yearValues, limits = c(dataLT_sp$minYear[1] - 0.1, dataLT_sp$maxYear[1] + 0.1)) +
  scale_y_continuous(breaks = seq(0.7, 1.4, by = 0.15), limits = c(0.7, 1.4)) +
  theme_trends(base_size = 12, color = NA) +
  labs(
    title = "Verdier d'Europe",
    subtitle = subtitle,
    x = "Année",
    y = "Abondance relative",
    color = "Observatoire",
    fill = "Observatoire"
  ) +
  theme(
    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
    legend.text = element_text(size = 14),
    axis.text = element_text(size = 14),
    axis.title = element_text(size = 18),
    title = element_text(size = 15),
    panel.grid.minor = element_blank(),
    legend.position = "top",
    legend.justification = "left",
    # IMPORTANT : forcer l'interprétation HTML/Markdown du sous-titre
    plot.subtitle = ggtext::element_markdown(size = 13, lineheight = 1.1)
  )

plot_verdier_ODJ_STOC
```

### Sittelle torchepot

différence pour hiver avec explications

#### ODJ-STOC

Tendance equivalent

```{r}
#| echo: false

sittelle_ODJ_STOC_dt <- comparaison_ODJ_STOC %>% 
  filter(species == "Sittelle torchepot") %>% 
  select(species, minYear, maxYear, estimate, pval, infIC, supIC, tendance_bilan)

```

```{r}
#| echo: false
#| warning: false

sp = "Sittelle torchepot"

# ODJ --------------------------------------------------------------------------

dataLT_sp = dataLongTerm[dataLongTerm$species == sp,]
dataLT_sp <- dataLT_sp %>% dplyr::select(-trendEBCC)
dataLT_sp <- na.omit(dataLT_sp)

yearValues = dataLT_sp$minYear:dataLT_sp$maxYear
      
estLT = dataLT_sp$estimate * (yearValues - min(yearValues))
estLT = estLT - mean(estLT)

dataPlot = data.frame(year = yearValues,
                      estimate = exp(estLT),
                      estimate_exp = exp(estLT), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT <- round(dataLT_sp$pval,3)
xSignLT <- dataLT_sp$maxYear + 1 # x-position of the significance
ySignLT <- mean(dataPlot$estimate[dataPlot$year == dataLT_sp$maxYear]) # y-position of the significance

# --- growth rate ---
grLT = dataLT_sp$estimate
grLT = round(grLT, 3)
xGrLT = dataLT_sp$minYear - 1
yGrLT = mean(dataPlot$estimate[dataPlot$year == min(dataPlot$year)])

# STOC -------------------------------------------------------------------------

dataLT_sp_STOC = STOCdataLongTerm[STOCdataLongTerm$species == sp,]
dataLT_sp_STOC <- dataLT_sp_STOC %>% dplyr::select(-trendEBCC)
dataLT_sp_STOC <- na.omit(dataLT_sp_STOC)

yearValues_STOC = dataLT_sp_STOC$minYear:dataLT_sp_STOC$maxYear
      
estLT_STOC = dataLT_sp_STOC$estimate * (yearValues_STOC - min(yearValues_STOC))
estLT_STOC = estLT_STOC - mean(estLT_STOC)

dataPlot_STOC = data.frame(year = yearValues_STOC,
                      estimate = exp(estLT_STOC),
                      estimate_exp = exp(estLT_STOC), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef_STOC = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT_STOC <- round(dataLT_sp_STOC$pval,3)
xSignLT_STOC <- dataLT_sp_STOC$maxYear + 1 # x-position of the significance
ySignLT_STOC <- mean(dataPlot_STOC$estimate[dataPlot_STOC$year == dataLT_sp_STOC$maxYear]) # y-position of the significance

# --- growth rate ---
grLT_STOC = dataLT_sp_STOC$estimate
grLT_STOC = round(grLT_STOC, 3)
xGrLT_STOC = dataLT_sp_STOC$minYear - 1
yGrLT_STOC = mean(dataPlot_STOC$estimate[dataPlot_STOC$year == min(dataPlot_STOC$year)])

# plot -------------------------------------------------------------------------

subtitle <- paste0("ODJ : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]", 
                           "\nSTOC : ", dataLT_sp_STOC$perc, 
                           "% [ ", dataLT_sp_STOC$infPerc, "% ; ",
                           dataLT_sp_STOC$supPerc, "%]")

plot_sittelle_ODJ_STOC = ggplot() +
                          geom_hline(yintercept = yRef, col = "gray", linetype = "dashed", linewidth = 1.01) +
                          # ODJ
                          geom_line(data = dataPlot[dataPlot$group == "LT",], aes(x = year, y = estimate),
                                             alpha = 1, linewidth = 1.1, color = "darkgrey") +
                          annotate(geom = "text", label = signLT, color = "darkgrey", size = 5, 
                                   x = xSignLT, y = ySignLT) +
                          annotate(geom = "text", label = grLT, color = "darkgrey", size = 5, 
                                   x = xGrLT, y = yGrLT) +
                          # STOC
                          geom_line(data = dataPlot_STOC[dataPlot_STOC$group == "LT",], aes(x = year, y = estimate),
                                             alpha = 1, linewidth = 1.1, color = "darkgreen") +
                          annotate(geom = "text", label = signLT_STOC, color = "darkgreen", size = 5, 
                                   x = xSignLT_STOC, y = ySignLT_STOC) +
                          annotate(geom = "text", label = grLT_STOC, color = "darkgreen", size = 5, 
                                   x = xGrLT_STOC, y = yGrLT_STOC) +
                          ggtitle(sp) +
                          scale_x_continuous(breaks = yearValues, limits = c(dataLT_sp$minYear - 1, dataLT_sp$maxYear +1)) +
                          scale_y_continuous(breaks = seq(0.7, 1.4, by = 0.1), limits = c(0.7, 1.4)) +
                          theme_trends(base_size = 12, color = NA) +
                          labs(
                            title = "Sittelle torchepot",
                            subtitle = subtitle,
                            x = "Année",
                            y = "Abondance relative",
                            color = "Observatoire",
                            fill = "Observatoire"
                          ) + 
                          theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
                                         legend.text = element_text(size = 14),
                                         axis.text = element_text(size = 14),
                                         axis.title = element_text(size = 18),
                                         title = element_text(size = 15),
                                         panel.grid.minor = element_blank(),
                                         legend.position = "top",
                                         legend.justification = "left") ; plot_sittelle_ODJ_STOC 

```

### Grosbec casse-noyaux

#### ODJ-STOC

tendances opposées

```{r}
#| echo: false
#| warning: false

sp = "Grosbec casse-noyaux"

# ODJ --------------------------------------------------------------------------

dataLT_sp = dataLongTerm[dataLongTerm$species == sp,]
dataLT_sp <- dataLT_sp %>% dplyr::select(-trendEBCC)
dataLT_sp <- na.omit(dataLT_sp)

yearValues = dataLT_sp$minYear:dataLT_sp$maxYear
      
estLT = dataLT_sp$estimate * (yearValues - min(yearValues))
estLT = estLT - mean(estLT)

dataPlot = data.frame(year = yearValues,
                      estimate = exp(estLT),
                      estimate_exp = exp(estLT), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT <- round(dataLT_sp$pval,3)
xSignLT <- dataLT_sp$maxYear + 1 # x-position of the significance
ySignLT <- mean(dataPlot$estimate[dataPlot$year == dataLT_sp$maxYear]) # y-position of the significance

# --- growth rate ---
grLT = dataLT_sp$estimate
grLT = round(grLT, 3)
xGrLT = dataLT_sp$minYear - 1
yGrLT = mean(dataPlot$estimate[dataPlot$year == min(dataPlot$year)])

# STOC -------------------------------------------------------------------------

dataLT_sp_STOC = STOCdataLongTerm[STOCdataLongTerm$species == sp,]
dataLT_sp_STOC <- dataLT_sp_STOC %>% dplyr::select(-trendEBCC)
dataLT_sp_STOC <- na.omit(dataLT_sp_STOC)

yearValues_STOC = dataLT_sp_STOC$minYear:dataLT_sp_STOC$maxYear
      
estLT_STOC = dataLT_sp_STOC$estimate * (yearValues_STOC - min(yearValues_STOC))
estLT_STOC = estLT_STOC - mean(estLT_STOC)

dataPlot_STOC = data.frame(year = yearValues_STOC,
                      estimate = exp(estLT_STOC),
                      estimate_exp = exp(estLT_STOC), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef_STOC = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT_STOC <- round(dataLT_sp_STOC$pval,3)
xSignLT_STOC <- dataLT_sp_STOC$maxYear + 1 # x-position of the significance
ySignLT_STOC <- mean(dataPlot_STOC$estimate[dataPlot_STOC$year == dataLT_sp_STOC$maxYear]) # y-position of the significance

# --- growth rate ---
grLT_STOC = dataLT_sp_STOC$estimate
grLT_STOC = round(grLT_STOC, 5)
xGrLT_STOC = dataLT_sp_STOC$minYear - 1
yGrLT_STOC = mean(dataPlot_STOC$estimate[dataPlot_STOC$year == min(dataPlot_STOC$year)])

# plot -------------------------------------------------------------------------

subtitle <- paste0("ODJ : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]", 
                           "\nSTOC : ", dataLT_sp_STOC$perc, 
                           "% [ ", dataLT_sp_STOC$infPerc, "% ; ",
                           dataLT_sp_STOC$supPerc, "%]")

plot_grosbec_ODJ_STOC = ggplot() +
                          geom_hline(yintercept = yRef, col = "gray", linetype = "dashed", linewidth = 1.01) +
                          # ODJ
                          geom_line(data = dataPlot[dataPlot$group == "LT",], aes(x = year, y = estimate),
                                             alpha = 1, linewidth = 1.1, color = "darkgrey") +
                          annotate(geom = "text", label = signLT, color = "darkgrey", size = 5, 
                                   x = xSignLT, y = ySignLT) +
                          annotate(geom = "text", label = grLT, color = "darkgrey", size = 5, 
                                   x = xGrLT, y = yGrLT) +
                          # STOC
                          geom_line(data = dataPlot_STOC[dataPlot_STOC$group == "LT",], aes(x = year, y = estimate),
                                             alpha = 1, linewidth = 1.1, color = "darkgreen") +
                          annotate(geom = "text", label = signLT_STOC, color = "darkgreen", size = 5, 
                                   x = xSignLT_STOC, y = ySignLT_STOC) +
                          annotate(geom = "text", label = grLT_STOC, color = "darkgreen", size = 5, 
                                   x = xGrLT_STOC, y = yGrLT_STOC) +
                          ggtitle(sp) +
                          scale_x_continuous(breaks = yearValues, limits = c(dataLT_sp$minYear - 1, dataLT_sp$maxYear +1)) +
                          scale_y_continuous(breaks = seq(0.7, 1.4, by = 0.1), limits = c(0.7, 1.4)) +
                          theme_trends(base_size = 12, color = NA) +
                          labs(
                            title = "Grosbec casse-noyaux",
                            subtitle = subtitle,
                            x = "Année",
                            y = "Abondance relative",
                            color = "Observatoire",
                            fill = "Observatoire"
                          ) + 
                          theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
                                         legend.text = element_text(size = 14),
                                         axis.text = element_text(size = 14),
                                         axis.title = element_text(size = 18),
                                         title = element_text(size = 15),
                                         panel.grid.minor = element_blank(),
                                         legend.position = "top",
                                         legend.justification = "left") ; plot_grosbec_ODJ_STOC 

```

### Rougegorge

#### ODJ-STOC


tendances equivalents été et hiver

```{r}
#| echo: false
#| warning: false

sp = "Rougegorge familier"

# ODJ --------------------------------------------------------------------------

dataLT_sp = dataLongTerm[dataLongTerm$species == sp,]
dataLT_sp <- dataLT_sp %>% dplyr::select(-trendEBCC)
dataLT_sp <- na.omit(dataLT_sp)

yearValues = dataLT_sp$minYear:dataLT_sp$maxYear
      
estLT = dataLT_sp$estimate * (yearValues - min(yearValues))
estLT = estLT - mean(estLT)

dataPlot = data.frame(year = yearValues,
                      estimate = exp(estLT),
                      estimate_exp = exp(estLT), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT <- round(dataLT_sp$pval,4)
xSignLT <- dataLT_sp$maxYear + 1 # x-position of the significance
ySignLT <- mean(dataPlot$estimate[dataPlot$year == dataLT_sp$maxYear]) # y-position of the significance

# --- growth rate ---
grLT = dataLT_sp$estimate
grLT = round(grLT, 3)
xGrLT = dataLT_sp$minYear - 1
yGrLT = mean(dataPlot$estimate[dataPlot$year == min(dataPlot$year)])

# STOC -------------------------------------------------------------------------

dataLT_sp_STOC = STOCdataLongTerm[STOCdataLongTerm$species == sp,]
dataLT_sp_STOC <- dataLT_sp_STOC %>% dplyr::select(-trendEBCC)
dataLT_sp_STOC <- na.omit(dataLT_sp_STOC)

yearValues_STOC = dataLT_sp_STOC$minYear:dataLT_sp_STOC$maxYear
      
estLT_STOC = dataLT_sp_STOC$estimate * (yearValues_STOC - min(yearValues_STOC))
estLT_STOC = estLT_STOC - mean(estLT_STOC)

dataPlot_STOC = data.frame(year = yearValues_STOC,
                      estimate = exp(estLT_STOC),
                      estimate_exp = exp(estLT_STOC), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef_STOC = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT_STOC <- round(dataLT_sp_STOC$pval,58)
xSignLT_STOC <- dataLT_sp_STOC$maxYear + 1 # x-position of the significance
ySignLT_STOC <- mean(dataPlot_STOC$estimate[dataPlot_STOC$year == dataLT_sp_STOC$maxYear]) # y-position of the significance

# --- growth rate ---
grLT_STOC = dataLT_sp_STOC$estimate
grLT_STOC = round(grLT_STOC, 3)
xGrLT_STOC = dataLT_sp_STOC$minYear - 1
yGrLT_STOC = mean(dataPlot_STOC$estimate[dataPlot_STOC$year == min(dataPlot_STOC$year)])

# plot -------------------------------------------------------------------------

subtitle <- paste0("ODJ : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]", 
                           "\nSTOC : ", dataLT_sp_STOC$perc, 
                           "% [ ", dataLT_sp_STOC$infPerc, "% ; ",
                           dataLT_sp_STOC$supPerc, "%]")

plot_rougegorge_ODJ_STOC = ggplot() +
                          geom_hline(yintercept = yRef, col = "gray", linetype = "dashed", linewidth = 1.01) +
                          # ODJ
                          geom_line(data = dataPlot[dataPlot$group == "LT",], aes(x = year, y = estimate),
                                             alpha = 1, linewidth = 1.1, color = "darkgrey") +
                          annotate(geom = "text", label = signLT, color = "darkgrey", size = 5, 
                                   x = xSignLT, y = ySignLT) +
                          annotate(geom = "text", label = grLT, color = "darkgrey", size = 5, 
                                   x = xGrLT, y = yGrLT) +
                          # STOC
                          geom_line(data = dataPlot_STOC[dataPlot_STOC$group == "LT",], aes(x = year, y = estimate),
                                             alpha = 1, linewidth = 1.1, color = "darkgreen") +
                          annotate(geom = "text", label = signLT_STOC, color = "darkgreen", size = 5, 
                                   x = xSignLT_STOC, y = ySignLT_STOC) +
                          annotate(geom = "text", label = grLT_STOC, color = "darkgreen", size = 5, 
                                   x = xGrLT_STOC, y = yGrLT_STOC) +
                          ggtitle(sp) +
                          scale_x_continuous(breaks = yearValues, limits = c(dataLT_sp$minYear - 1, dataLT_sp$maxYear +1)) +
                          scale_y_continuous(breaks = seq(0.7, 1.4, by = 0.1), limits = c(0.7, 1.4)) +
                          theme_trends(base_size = 12, color = NA) +
                          labs(
                            title = "Rougegorge familier",
                            subtitle = subtitle,
                            x = "Année",
                            y = "Abondance relative",
                            color = "Observatoire",
                            fill = "Observatoire"
                          ) + 
                          theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
                                         legend.text = element_text(size = 14),
                                         axis.text = element_text(size = 14),
                                         axis.title = element_text(size = 18),
                                         title = element_text(size = 15),
                                         panel.grid.minor = element_blank(),
                                         legend.position = "top",
                                         legend.justification = "left") ; plot_rougegorge_ODJ_STOC 

```

### Mésange bleue

#### ODJ-STOC

tendances equivalents

```{r}
#| echo: false
#| warning: false

sp = "Mesange bleue"

# ODJ --------------------------------------------------------------------------

dataLT_sp = dataLongTerm[dataLongTerm$species == sp,]
dataLT_sp <- dataLT_sp %>% dplyr::select(-trendEBCC)
dataLT_sp <- na.omit(dataLT_sp)

yearValues = dataLT_sp$minYear:dataLT_sp$maxYear
      
estLT = dataLT_sp$estimate * (yearValues - min(yearValues))
estLT = estLT - mean(estLT)

dataPlot = data.frame(year = yearValues,
                      estimate = exp(estLT),
                      estimate_exp = exp(estLT), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT <- round(dataLT_sp$pval,3)
xSignLT <- dataLT_sp$maxYear + 1 # x-position of the significance
ySignLT <- mean(dataPlot$estimate[dataPlot$year == dataLT_sp$maxYear]) # y-position of the significance

# --- growth rate ---
grLT = dataLT_sp$estimate
grLT = round(grLT, 3)
xGrLT = dataLT_sp$minYear - 1
yGrLT = mean(dataPlot$estimate[dataPlot$year == min(dataPlot$year)])

# STOC -------------------------------------------------------------------------

dataLT_sp_STOC = STOCdataLongTerm[STOCdataLongTerm$species == sp,]
dataLT_sp_STOC <- dataLT_sp_STOC %>% dplyr::select(-trendEBCC)
dataLT_sp_STOC <- na.omit(dataLT_sp_STOC)

yearValues_STOC = dataLT_sp_STOC$minYear:dataLT_sp_STOC$maxYear
      
estLT_STOC = dataLT_sp_STOC$estimate * (yearValues_STOC - min(yearValues_STOC))
estLT_STOC = estLT_STOC - mean(estLT_STOC)

dataPlot_STOC = data.frame(year = yearValues_STOC,
                      estimate = exp(estLT_STOC),
                      estimate_exp = exp(estLT_STOC), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef_STOC = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT_STOC <- round(dataLT_sp_STOC$pval,4)
xSignLT_STOC <- dataLT_sp_STOC$maxYear + 1 # x-position of the significance
ySignLT_STOC <- mean(dataPlot_STOC$estimate[dataPlot_STOC$year == dataLT_sp_STOC$maxYear]) # y-position of the significance

# --- growth rate ---
grLT_STOC = dataLT_sp_STOC$estimate
grLT_STOC = round(grLT_STOC, 3)
xGrLT_STOC = dataLT_sp_STOC$minYear - 1
yGrLT_STOC = mean(dataPlot_STOC$estimate[dataPlot_STOC$year == min(dataPlot_STOC$year)])

# plot -------------------------------------------------------------------------

subtitle <- paste0("ODJ : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]", 
                           "\nSTOC : ", dataLT_sp_STOC$perc, 
                           "% [ ", dataLT_sp_STOC$infPerc, "% ; ",
                           dataLT_sp_STOC$supPerc, "%]")

plot_mesange_ODJ_STOC = ggplot() +
                          geom_hline(yintercept = yRef, col = "gray", linetype = "dashed", linewidth = 1.01) +
                          # ODJ
                          geom_line(data = dataPlot[dataPlot$group == "LT",], aes(x = year, y = estimate),
                                             alpha = 1, linewidth = 1.1, color = "darkgrey") +
                          annotate(geom = "text", label = signLT, color = "darkgrey", size = 5, 
                                   x = xSignLT, y = ySignLT) +
                          annotate(geom = "text", label = grLT, color = "darkgrey", size = 5, 
                                   x = xGrLT, y = yGrLT) +
                          # STOC
                          geom_line(data = dataPlot_STOC[dataPlot_STOC$group == "LT",], aes(x = year, y = estimate),
                                             alpha = 1, linewidth = 1.1, color = "darkgreen") +
                          annotate(geom = "text", label = signLT_STOC, color = "darkgreen", size = 5, 
                                   x = xSignLT_STOC, y = ySignLT_STOC) +
                          annotate(geom = "text", label = grLT_STOC, color = "darkgreen", size = 5, 
                                   x = xGrLT_STOC, y = yGrLT_STOC) +
                          ggtitle(sp) +
                          scale_x_continuous(breaks = yearValues, limits = c(dataLT_sp$minYear - 1, dataLT_sp$maxYear +1)) +
                          scale_y_continuous(breaks = seq(0.7, 1.4, by = 0.1), limits = c(0.7, 1.4)) +
                          theme_trends(base_size = 12, color = NA) +
                          labs(
                            title = "Mésange bleue",
                            subtitle = subtitle,
                            x = "Année",
                            y = "Abondance relative",
                            color = "Observatoire",
                            fill = "Observatoire"
                          ) + 
                          theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
                                         legend.text = element_text(size = 14),
                                         axis.text = element_text(size = 14),
                                         axis.title = element_text(size = 18),
                                         title = element_text(size = 15),
                                         panel.grid.minor = element_blank(),
                                         legend.position = "top",
                                         legend.justification = "left") ; plot_mesange_ODJ_STOC 

```

### Pinson des arbres

#### ODJ-STOC

tendances equivalents

```{r}
#| echo: false
#| warning: false

sp = "Pinson des arbres"

# ODJ --------------------------------------------------------------------------

dataLT_sp = dataLongTerm[dataLongTerm$species == sp,]
dataLT_sp <- dataLT_sp %>% dplyr::select(-trendEBCC)
dataLT_sp <- na.omit(dataLT_sp)

yearValues = dataLT_sp$minYear:dataLT_sp$maxYear
      
estLT = dataLT_sp$estimate * (yearValues - min(yearValues))
estLT = estLT - mean(estLT)

dataPlot = data.frame(year = yearValues,
                      estimate = exp(estLT),
                      estimate_exp = exp(estLT), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT <- round(dataLT_sp$pval,3)
xSignLT <- dataLT_sp$maxYear + 1 # x-position of the significance
ySignLT <- mean(dataPlot$estimate[dataPlot$year == dataLT_sp$maxYear]) # y-position of the significance

# --- growth rate ---
grLT = dataLT_sp$estimate
grLT = round(grLT, 3)
xGrLT = dataLT_sp$minYear - 1
yGrLT = mean(dataPlot$estimate[dataPlot$year == min(dataPlot$year)])

# STOC -------------------------------------------------------------------------

dataLT_sp_STOC = STOCdataLongTerm[STOCdataLongTerm$species == sp,]
dataLT_sp_STOC <- dataLT_sp_STOC %>% dplyr::select(-trendEBCC)
dataLT_sp_STOC <- na.omit(dataLT_sp_STOC)

yearValues_STOC = dataLT_sp_STOC$minYear:dataLT_sp_STOC$maxYear
      
estLT_STOC = dataLT_sp_STOC$estimate * (yearValues_STOC - min(yearValues_STOC))
estLT_STOC = estLT_STOC - mean(estLT_STOC)

dataPlot_STOC = data.frame(year = yearValues_STOC,
                      estimate = exp(estLT_STOC),
                      estimate_exp = exp(estLT_STOC), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef_STOC = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT_STOC <- round(dataLT_sp_STOC$pval,3)
xSignLT_STOC <- dataLT_sp_STOC$maxYear + 1 # x-position of the significance
ySignLT_STOC <- mean(dataPlot_STOC$estimate[dataPlot_STOC$year == dataLT_sp_STOC$maxYear]) # y-position of the significance

# --- growth rate ---
grLT_STOC = dataLT_sp_STOC$estimate
grLT_STOC = round(grLT_STOC, 3)
xGrLT_STOC = dataLT_sp_STOC$minYear - 1
yGrLT_STOC = mean(dataPlot_STOC$estimate[dataPlot_STOC$year == min(dataPlot_STOC$year)])

# plot -------------------------------------------------------------------------

subtitle <- paste0("ODJ : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]", 
                           "\nSTOC : ", dataLT_sp_STOC$perc, 
                           "% [ ", dataLT_sp_STOC$infPerc, "% ; ",
                           dataLT_sp_STOC$supPerc, "%]")

plot_pinson_ODJ_STOC = ggplot() +
                          geom_hline(yintercept = yRef, col = "gray", linetype = "dashed", linewidth = 1.01) +
                          # ODJ
                          geom_line(data = dataPlot[dataPlot$group == "LT",], aes(x = year, y = estimate),
                                             alpha = 1, linewidth = 1.1, color = "darkgrey") +
                          annotate(geom = "text", label = signLT, color = "darkgrey", size = 5, 
                                   x = xSignLT, y = ySignLT) +
                          annotate(geom = "text", label = grLT, color = "darkgrey", size = 5, 
                                   x = xGrLT, y = yGrLT) +
                          # STOC
                          geom_line(data = dataPlot_STOC[dataPlot_STOC$group == "LT",], aes(x = year, y = estimate),
                                             alpha = 1, linewidth = 1.1, color = "darkgreen") +
                          annotate(geom = "text", label = signLT_STOC, color = "darkgreen", size = 5, 
                                   x = xSignLT_STOC, y = ySignLT_STOC) +
                          annotate(geom = "text", label = grLT_STOC, color = "darkgreen", size = 5, 
                                   x = xGrLT_STOC, y = yGrLT_STOC) +
                          ggtitle(sp) +
                          scale_x_continuous(breaks = yearValues, limits = c(dataLT_sp$minYear - 1, dataLT_sp$maxYear +1)) +
                          scale_y_continuous(breaks = seq(0.7, 1.4, by = 0.1), limits = c(0.7, 1.4)) +
                          theme_trends(base_size = 12, color = NA) +
                          labs(
                            title = "Pinson des arbres",
                            subtitle = subtitle,
                            x = "Année",
                            y = "Abondance relative",
                            color = "Observatoire",
                            fill = "Observatoire"
                          ) + 
                          theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
                                         legend.text = element_text(size = 14),
                                         axis.text = element_text(size = 14),
                                         axis.title = element_text(size = 18),
                                         title = element_text(size = 15),
                                         panel.grid.minor = element_blank(),
                                         legend.position = "top",
                                         legend.justification = "left") ; plot_pinson_ODJ_STOC 

```
