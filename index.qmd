---
title: "Bilan ODJ 2025 : comparaison STOC & SHOC"
format: html
editor: visual
---

```{r}
#| include: false
library(readr)
library(tidyverse)
library(DT)
library(dplyr)
library(extrafont)
library(ggthemes)
library(ggplot2)
library(grid)
```

```{r}
#| include: false

####COLOR ODJ 

ColW_Bleue<-"#4B6C8D"
ColS_Vert<-"#72A603"
GrisClair<-"#F2F2F2"
GrisFoncé<-"#4F4F4F"

colfunc <- colorRampPalette(c(ColW_Bleue, "#B4C6D9"))
colfunc(45)

###GRAPH SPEC

dodgewidth <- position_dodge(width=0.9)

theme_histo<-function (base_size = 12, color = "white", base_family = "Source Sans Pro", title_family = "Source Sans Pro") {
  colorhex <- ggthemes::ggthemes_data$wsj$bg[color]
  theme_foundation(base_size = base_size, base_family = base_family) + 
    theme(line = element_line(linetype = 1, colour = "black"), rect = element_rect(fill = colorhex, linetype = 0, colour = NA), text = element_text(colour = "black"), title = element_text(family = title_family, size = rel(1)), axis.title.x=element_blank(),axis.title.y = element_text(family = title_family, size = rel(1),), axis.text =   element_text(face = "plain", size = rel(1)), axis.text.x = element_text(colour= NULL), axis.text.y = element_text(colour = NULL), axis.ticks = element_line(colour = NULL), axis.ticks.y = element_blank(), axis.ticks.x = element_line(colour = NULL), axis.line = element_line(), axis.line.y = element_blank(), legend.background = element_rect(), legend.position = "top", legend.direction = "horizontal", legend.box = "vertical", panel.grid = element_line(colour = NULL, linetype = 3), panel.grid.major = element_line(colour = GrisFoncé), panel.grid.major.x = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0, face = "bold"), plot.margin = unit(c(1, 1, 1, 1), "lines"), strip.background = element_rect(),strip.text = element_text(hjust = 0.1, face = "bold",colour=GrisFoncé,size = rel(1)),plot.subtitle=element_text(hjust = 0, face = "bold",colour=GrisFoncé,size = rel(1)))
}

theme_trends<-function (base_size = 12, color = "white", base_family = "Source Sans Pro", title_family = "Source Sans Pro") {
  colorhex <- ggthemes::ggthemes_data$wsj$bg[color]
  theme_foundation(base_size = base_size, base_family = base_family) + 
    theme(line = element_line(linetype = 1, colour = "black"), rect = element_rect(fill = colorhex, linetype = 0, colour = NA), text = element_text(colour = "black"), title = element_text(family = title_family, size = rel(1)), axis.title.x=element_blank(),axis.title.y = element_text(family = title_family, size = rel(1),), axis.text =   element_text(face = "plain", size = rel(1)), axis.text.x = element_text(colour= NULL), axis.text.y = element_text(colour = NULL), axis.ticks = element_line(colour = NULL), axis.ticks.y = element_blank(), axis.ticks.x = element_line(colour = NULL), axis.line = element_line(), axis.line.y = element_blank(), legend.background = element_rect(), legend.position = "top", legend.direction = "horizontal", legend.box = "vertical", panel.grid = element_line(colour = NULL, linetype = 3), panel.grid.major = element_line(colour = GrisFoncé), panel.grid.major.x = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0, face = "bold",margin=margin(0,0,15,0)), plot.margin = unit(c(1, 1, 1, 1), "lines"), strip.background = element_rect(),plot.subtitle = element_text(hjust = 0, face = "bold",colour=GrisFoncé,size = rel(1)))
}

theme_bump<-function (base_size = 12, color = "white", base_family = "Source Sans Pro", title_family = "Source Sans Pro") {
  colorhex <- ggthemes::ggthemes_data$wsj$bg[color]
  theme_foundation(base_size = base_size, base_family = base_family) + 
    theme(line = element_line(linetype = 1, colour = "black"), rect = element_rect(fill = colorhex, linetype = 0, colour = NA), text = element_text(colour = "black"), title = element_text(family = title_family, size = rel(1)), axis.title.x=element_blank(),axis.title.y = element_blank(), axis.text =   element_blank(), axis.text.x = element_text(colour= NULL,size = rel(1),face = "bold"), axis.text.y = element_blank(), axis.ticks = element_blank(), axis.ticks.y = element_blank(), axis.ticks.x = element_blank(), axis.line = element_blank(), axis.line.y = element_blank(), legend.background = element_rect(), legend.position = "top", legend.direction = "horizontal", legend.box = "vertical", panel.grid = element_line(colour = NULL, linetype = 3), panel.grid.major = element_blank(), panel.grid.major.x = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0, face = "bold"), plot.margin = unit(c(1, 1, 1, 1), "lines"), strip.background = element_rect(),strip.text = element_text(hjust = 0.1, face = "bold",colour=GrisFoncé,size = rel(1)))
}

```

## Contenu

Tendances ODJ et comparaison avec les observatoires STOC et SHOC

## !!! Description du projet ODJ-STOC-SHOC

Décrire projet Marion, pourquoi nous nous posons ces questions, pourquoi c’est intéressant ?

2 suivis d’oiseaux depuis plus de 10 ans au national. Il faut s‘intéresser aux tendances calculées, ce qui fait émerger plusieurs questionnements. Qu’est-ce qu’on échantillonne, est ce que ce sont les mêmes populations ? Bien mettre en avant que ce ne sont pas les mêmes milieux.

Mise en avant des spécificités ODJ

Spécificités négatives et positives – bcp de données, milieu privé sans accès…

Dire que c’est une étude préliminaire (bien insister sur ce point) on utilise les mêmes types d’analyses que le bilan des oiseaux communs (STOC).

On a comparé les estimations sur les mêmes périodes avec les analyses statistiques (2014 2024).

## Données

```{r}
#| include: false
comparaison_ODJ_STOC <- read_delim("1) data/longTermTrends-Comparaison-ODJ-STOC.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE)

comparaison_ODJ_SHOC <- read_delim("1) data/longTermTrends-Comparaison-ODJ-SHOC.csv", 
    delim = ";", escape_double = FALSE, trim_ws = TRUE)



# dataLongTerm <- read_csv("C:/Users/suzanne.bonamour/OneDrive - LPO/2) Data/7) ODJ bilan/1) Analyses/BilanODJ2025/1) data/longTermTrends_esp_BILAN2025.csv")

dataLongTerm <- read.csv("C:/Users/suzanne.bonamour/OneDrive - LPO/2) Data/7) ODJ bilan/1) Analyses/BilanODJ2025/1) data/longTermTrends_esp_BILAN2025.txt", comment.char="#")

# dataLongTerm$species[dataLongTerm$species=="M�sange bleue"] <- "M�ange bleue"]
dataLongTerm$species <- dataLongTerm$french_name



# On garde que les espèces dans ODJ ---

list_dans_ODJ <- c("Troglodyte mignon", "Accenteur mouchet", "Rougegorge familier", "Moineau domestique",
    "Verdier d'Europe", "Tarin des aulnes", "Chardonneret élégant", "Pinson des arbres", "Mésange charbonnière",
    "Mésange bleue", "Sittelle torchepot", "Hirondelle rustique", "Grive musicienne", "Étourneau sansonnet",
    "Merle noir", "Corneille noire", "Pigeon biset domestique", "Pigeon ramier", "Tourterelle turque",
    "Pie bavarde", "Roitelet huppé", "Bergeronnette grise", "Mésange nonnette", "Mésange huppée",
    "Mésange à longue queue", "Fauvette à tête noire", "Rougequeue noir", "Rougequeue à front blanc",
    "Grive mauvis", "Grive draine", "Serin cini", "Bruant jaune", "Bouvreuil pivoine", "Linotte mélodieuse",
    "Pinson du Nord", "Bruant zizi", "Grosbec casse-noyaux", "Pic vert", "Pic épeiche", "Pic épeichette",
    "Grimpereau des jardins", "Hirondelle de fenêtre", "Martinet noir", "Choucas des tours", "Huppe fasciée",
    "Geai des chênes", "Épervier d'Europe", "Perruche à collier", "Gobemouche gris", "Moineau friquet", 
    "Mésange noire", "Pouillot véloce")

# comparaison_ODJ_STOC <- comparaison_ODJ_STOC %>% 
#   mutate(dans_ODJ = case_when(
#     species %in%  list_dans_ODJ ~ "oui",
#     TRUE ~ "non"))
# 
# length(list_dans_ODJ)
# length(unique(comparaison_ODJ_STOC$species[comparaison_ODJ_STOC$dans_ODJ=="oui"]))
# table(unique(comparaison_ODJ_STOC$species[comparaison_ODJ_STOC$dans_ODJ=="oui"]))
# table(unique(comparaison_ODJ_STOC$species[comparaison_ODJ_STOC$dans_ODJ=="non"]))
# 
# comparaison_ODJ_SHOC <- comparaison_ODJ_SHOC %>% 
#   mutate(dans_ODJ = case_when(
#     species %in%  list_dans_ODJ ~ "oui",
#     TRUE ~ "non"))
# 
# length(list_dans_ODJ)
# length(unique(comparaison_ODJ_SHOC$species[comparaison_ODJ_SHOC$dans_ODJ=="oui"]))
# table(unique(comparaison_ODJ_SHOC$species[comparaison_ODJ_SHOC$dans_ODJ=="oui"]))
# table(unique(comparaison_ODJ_SHOC$species[comparaison_ODJ_SHOC$dans_ODJ=="non"]))

comparaison_ODJ_STOC <- comparaison_ODJ_STOC %>% 
  filter(species %in% list_dans_ODJ)

comparaison_ODJ_SHOC <- comparaison_ODJ_SHOC %>% 
  filter(species %in% list_dans_ODJ)

# colonnes tendance_bilan ---

comparaison_ODJ_STOC <- comparaison_ODJ_STOC %>% 
  mutate(tendance_bilan = case_when(
    trend %in% c("D\xe9clin mod\xe9r\xe9", "D\xe9clin fort", "D\xe9clin mod\xe9r\xe9 \xe0 fort", 
                 "Déclin fort", "Déclin modéré", "Déclin modéré à fort") ~ "déclin",
    trend %in% c("Augmentation forte", "Augmentation mod\xe9r\xe9e", 
                 "Augmentation mod\xe9r\xe9e \xe0 forte", "Augmentation modérée", 
                 "Augmentation modérée à forte") ~ "augmentation",
    trend %in% c("Incertain") ~ "incertain",
    trend %in% c("Stable") ~ "stable",
    TRUE ~ "autre"
  ))

table(comparaison_ODJ_STOC$tendance_bilan)

comparaison_ODJ_SHOC <- comparaison_ODJ_SHOC %>% 
  mutate(tendance_bilan = case_when(
    trend %in% c("D\xe9clin mod\xe9r\xe9", "D\xe9clin fort", "D\xe9clin mod\xe9r\xe9 \xe0 fort", 
                 "Déclin fort", "Déclin modéré", "Déclin modéré à fort") ~ "déclin",
    trend %in% c("Augmentation forte", "Augmentation mod\xe9r\xe9e", 
                 "Augmentation mod\xe9r\xe9e \xe0 forte", "Augmentation modérée", 
                 "Augmentation modérée à forte") ~ "augmentation",
    trend %in% c("Incertain") ~ "incertain",
    trend %in% c("Stable") ~ "stable",
    TRUE ~ "autre"
  ))

table(comparaison_ODJ_SHOC$tendance_bilan)

comparaison_ODJ_STOC$tendance_bilan <- factor(
  comparaison_ODJ_STOC$tendance_bilan,
  levels = c("déclin", "stable", "augmentation", "incertain", "autre")
)

comparaison_ODJ_SHOC$tendance_bilan <- factor(
  comparaison_ODJ_SHOC$tendance_bilan,
  levels = c("déclin", "stable", "augmentation", "incertain", "autre")
)
```

## Listes des espèces comparables

Mettre en avant le nombre d’esp pour lesquelles on peut faire des comparaison (pas de tendance incertaines)

### ODJ-STOC

```{r}
#| include: false

# ODJ-STOC

liste_esp_ODJ_STOC_1 <- comparaison_ODJ_STOC %>% 
  filter(Comparaison !="Incertain") %>% 
  dplyr::select(species) %>% 
  distinct()

```

Nombre d'espèce pour lesquelles il est possible de compararer les tendances temporelles entre les observatoires ODJ et STOC : `r length(liste_esp_ODJ_STOC_1$species)`

Listes des espèces comparées :

```{r echo=FALSE, message=FALSE}

# Click table
liste_esp_ODJ_STOC_1 %>%
  datatable(extensions = 'Buttons',
            options = list(dom = 'Blfrtip',
                           buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
                           lengthMenu = list(c(10,25,50,-1),
                                             c(10,25,50,"All"))))
```

### ODJ-SHOC

```{r}
#| include: false

# ODJ-SHOC

liste_esp_ODJ_SHOC_1 <- comparaison_ODJ_SHOC %>% 
  filter(Comparaison !="Incertain") %>% 
  dplyr::select(species) %>% 
  distinct()

```

Nombre d'espèce pour lesquelles il est possible de compararer les tendances temporelles entre les observatoires ODJ et SHOC : `r length(liste_esp_ODJ_SHOC_1$species)`

Listes des espèces comparées :

```{r echo=FALSE, message=FALSE}

# Click table
liste_esp_ODJ_SHOC_1 %>%
  datatable(extensions = 'Buttons',
            options = list(dom = 'Blfrtip',
                           buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
                           lengthMenu = list(c(10,25,50,-1),
                                             c(10,25,50,"All"))))
```

## !!! Comparaison des tendances

### !!! ODJ-STOC

Expliquer qu’il y a tant d’espèces avec des patterns différents et tant d’esp pour lesquelles on peut faire des comparaisons.

**Figure à l’appui** : camembert hiver/été avec tendances opposées et similaires (dans similaire mettre les tendances identiques et les tendances différentes ie stable versus déclin ou augmentation – ne pas expliquer cela au grand public).

### !!! ODJ-SHOC

Expliquer qu’il y a tant d’espèces avec des patterns différents et tant d’esp pour lesquelles on peut faire des comparaisons.

**Figure à l’appui** : camembert hiver/été avec tendances opposées et similaires (dans similaire mettre les tendances identiques et les tendances différentes ie stable versus déclin ou augmentation – ne pas expliquer cela au grand public).

### Nombre d'espèces déclin/augmentation/stable

### ODJ

```{r}
#| echo: false
#| warning: false
#| fig-height: 4
#| fig-width: 8

nb_esp_tendance_ODJ_plot <- ggplot(comparaison_ODJ_STOC[comparaison_ODJ_STOC$tendance_bilan!="incertain" & comparaison_ODJ_STOC$Protocole == "ODJ",], aes(x = tendance_bilan)) +
  geom_bar(position = "dodge", fill = "darkgrey") +
  labs(
    x = "Tendance temporelle",
    y = "Nombre d'espèces",
    fill = "Observatoire"
  ) +
  theme_histo() ; nb_esp_tendance_ODJ_plot
```

### ODJ-STOC

```{r}
#| echo: false
#| warning: false
#| fig-height: 4
#| fig-width: 8

nb_esp_tendance_ODJ_STOC_plot <- ggplot(comparaison_ODJ_STOC[comparaison_ODJ_STOC$tendance_bilan!="incertain",], aes(x = tendance_bilan, fill = Protocole)) +
  geom_bar(position = "dodge") +
  scale_fill_manual(values = c("ODJ" = "darkgrey", "STOC" = "darkgreen")) +
  labs(
    x = "Tendance temporelle",
    y = "Nombre d'espèces",
    fill = "Observatoire"
  ) +
  theme_histo() ; nb_esp_tendance_ODJ_STOC_plot
```

### ODJ-SHOC

```{r}
#| echo: false
#| warning: false
#| fig-height: 4
#| fig-width: 8
#| 
nb_esp_tendance_ODJ_SHOC_plot <- ggplot(comparaison_ODJ_SHOC[comparaison_ODJ_SHOC$tendance_bilan!="incertain",], aes(x = tendance_bilan, fill = Protocole)) +
  geom_bar(position = "dodge") +
  scale_fill_manual(values = c("ODJ" = "darkgrey", "SHOC" = "darkblue")) +
  labs(
    x = "Tendance temporelle",
    y = "Nombre d'espèces",
    fill = "Observatoire"
  ) +
  theme_histo() ; nb_esp_tendance_ODJ_SHOC_plot
```

## !!! Interprétation des résultats

Bien préciser que cela ouvre de nouvelles pistes d’analyse et de suivi. On illustre cela avec quelques exemples (texte)

Bien mettre en avant que le pourcentage d’opposé est plus faible que le similaire (texte)

### !!! ODJ-STOC

### !!! ODJ-SHOC

## !!! Exemple d'espèce à mettre en avant

Pour chaque espèce mettre graphique de tendance commun ODJ et STOC/SHOC, une photo, un texte avec divers éléments sur l’espèce (écologie, conseils, explication tendance…)

Graphique : une ligne par suivi, avec la pente estimée pour chaque suivi, et des couleurs différentes par suivi, en plein quand sign, en pointillé quand non sign/stable

Se baser sur les sorties graphiques produites par Gwen

ATTENTION : penser à bien revérifier les tendances du STOC et SHOC qui seront publiées dans le rapport qui sortira à l’automne

### Verdier d’Europe

#### ODJ-STOC

Tendance similaire

!!!!!!!!!! ajout pourcentage dans les graphiques !!!!!!!!!!

```{r}
#| echo: false

verdier_ODJ_STOC_dt <- comparaison_ODJ_STOC %>% 
  filter(species == "Verdier d'Europe") %>% 
  select(species, Protocole, minYear, maxYear, estimate, pval, infIC, supIC, perc, infPerc, supPerc, tendance_bilan)

```

```{r}
#| echo: false
#| warning: false
#| fig-height: 5
#| fig-width: 8

verdier_info_ODJ_STOC <- data.frame(
  slope = verdier_ODJ_STOC_dt$estimate,
  intercept = - verdier_ODJ_STOC_dt$estimate * ((2012 + 2025) / 2),
  infIC = verdier_ODJ_STOC_dt$infIC,
  supIC = verdier_ODJ_STOC_dt$supIC,
  line = c("ODJ", "STOC")
)

verdier_info_ODJ_STOC_plot <- verdier_info_ODJ_STOC %>%
  mutate(
    slope_min = infIC, 
    slope_max = supIC
  ) %>%
  tidyr::expand_grid(x = seq(2012, 2025, by = 0.1)) %>% 
  mutate(
    y_min = intercept + slope_min * x,
    y_max = intercept + slope_max * x
  )

# library(cowplot)
# 
# flocon <- png::readPNG("flocon-de-neige.png")  # mettre ton fichier logo
# flocon_grob <- grid::rasterGrob(flocon, interpolate = TRUE)

subtitle_verdier <- paste0("ODJ : ", verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="ODJ"], 
                           " [ ", verdier_ODJ_STOC_dt$infPerc[verdier_ODJ_STOC_dt$Protocole=="ODJ"], "; ",
                           verdier_ODJ_STOC_dt$supPerc[verdier_ODJ_STOC_dt$Protocole=="ODJ"], "]", 
                           "\nSTOC : ", verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="STOC"], 
                           " [ ", verdier_ODJ_STOC_dt$infPerc[verdier_ODJ_STOC_dt$Protocole=="STOC"], "; ",
                           verdier_ODJ_STOC_dt$supPerc[verdier_ODJ_STOC_dt$Protocole=="STOC"], "]")

verdier_ODJ_STOC_plot <- ggplot(verdier_info_ODJ_STOC_plot, aes(color = line, fill = line)) +
  geom_ribbon(aes(x = x, ymin = y_min, ymax = y_max, fill = line), alpha = 0.2, color = "white") +
  geom_abline(aes(slope = slope, intercept = intercept, color = line), size = 2) +
  annotate("text", x = 6, y = 45, 
           label = "Janvier +24% [ +19% ; +30% ]", 
           hjust = 0, size = 5, fontface = "bold") +
  theme_trends(base_size = 12, color = NA) +
  scale_color_manual(values = c("darkgrey", "darkgreen")) +
  scale_fill_manual(values = c("darkgrey", "darkgreen")) + 
  scale_x_continuous(limits = c(2012, 2025), breaks = 2012:2025) +
  scale_y_continuous(limits = c(min(verdier_info_ODJ_STOC_plot$y_min), 
                                max(verdier_info_ODJ_STOC_plot$y_max)), 
                     breaks = seq(round(min(verdier_info_ODJ_STOC_plot$y_min)), 
                                  round(max(verdier_info_ODJ_STOC_plot$y_max)), by = 15)) +
  labs(x = "Année", y = "Effectifs relatifs", color = "", fill = "",
       title = "Verdier d'Europe",
       subtitle = subtitle_verdier) +
  theme(legend.position = "bottom") ; verdier_ODJ_STOC_plot


# verdier_ODJ_STOC_plot_2 <- ggdraw(verdier_ODJ_STOC_plot) + 
#   draw_grob(flocon_grob, x = 0.11, y = 0.8, width = 0.07, height = 0.07) ; verdier_ODJ_STOC_plot_2



verdier_ODJ_STOC_dt

# remove "%"
verdier_ODJ_STOC_dt[] <- lapply(verdier_ODJ_STOC_dt, gsub, pattern='%', replacement='')
verdier_ODJ_STOC_dt



# perc_verdier_ODJ_dt <- data.frame(
#   procole = "ODJ",
#   year = 2012:2025,
#   population = seq(100, 100 * (1 - verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="ODJ"]), 
#                    length.out = length(years)),
#   ymin = seq(100, 100 * (1 - verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="ODJ"]), length.out = length(years)) + 
#     (100 * (1 - verdier_ODJ_STOC_dt$infPerc[verdier_ODJ_STOC_dt$Protocole=="ODJ"])) - 
#     (100 * (1 - verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="ODJ"])),
#   ymax = seq(100, 100 * (1 - verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="ODJ"]), length.out = length(years)) + 
#     (100 * (1 - verdier_ODJ_STOC_dt$supPerc[verdier_ODJ_STOC_dt$Protocole=="ODJ"])) - 
#     (100 * (1 - verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="ODJ"]))
#   )

# Années de 2012 à 2025
years <- 2012:2025

# # Valeur centrale (chute -22.6%)
# pop_central_ODJ <- seq(100, 100 * (1 - verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="ODJ"]), length.out = length(years))
# pop_central_STOC <- seq(100, 100 * (1 - verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="STOC"]), length.out = length(years))
# 
# # Écarts fixes entre estimation centrale et IC en 2025
# ecart_bas_ODJ <- (100 * (1 - verdier_ODJ_STOC_dt$infPerc[verdier_ODJ_STOC_dt$Protocole=="ODJ"])) - (100 * (1 - verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="ODJ"]))
# ecart_haut_ODJ <- (100 * (1 - verdier_ODJ_STOC_dt$supPerc[verdier_ODJ_STOC_dt$Protocole=="ODJ"])) - (100 * (1 - verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="ODJ"]))
# 
# ecart_bas_STOC <- (100 * (1 - verdier_ODJ_STOC_dt$infPerc[verdier_ODJ_STOC_dt$Protocole=="STOC"])) - (100 * (1 - verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="ODJ"]))
# ecart_haut_STOC <- (100 * (1 - verdier_ODJ_STOC_dt$supPerc[verdier_ODJ_STOC_dt$Protocole=="STOC"])) - (100 * (1 - verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="ODJ"]))

# # IC appliqué de manière constante
# pop_min <- pop_central + ecart_bas
# pop_max <- pop_central + ecart_haut
# 
# # Jeu de données complet
# dt <- data.frame(
#   year = years,
#   population = pop_central,
#   ymin = pop_min,
#   ymax = pop_max
# )

# # Graphique
# ggplot(dt, aes(x = year, y = population)) +
#   geom_ribbon(aes(ymin = ymin, ymax = ymax), fill = "darkgrey", alpha = 0.2) +
#   geom_line(color = "darkgrey", size = 1.2) +
#   scale_x_continuous(breaks = c(2012, 2015, 2020, 2025)) +
#   labs(
#     title = "Évolution de la taille estimée pour le Verdier d'Europe",
#     subtitle = "Déclin estimée : -22.6% [ -30.8% ; -13.5% ] entre 2012 et 2025",
#     x = "Année",
#     y = "Population relativ (%)"
#   ) +
#   theme_minimal(base_size = 14)
# 
# 
# 
# 




# Années de 2012 à 2025
years <- 2012:2025

### --- Protocole A ---
verdier_ODJ_STOC_dt_ODJ_only <- verdier_ODJ_STOC_dt %>% filter(Protocole == "ODJ")
verdier_ODJ_STOC_dt_ODJ_only$perc <- as.numeric(verdier_ODJ_STOC_dt_ODJ_only$perc)
verdier_ODJ_STOC_dt_ODJ_only$supPerc <- as.numeric(verdier_ODJ_STOC_dt_ODJ_only$supPerc)
verdier_ODJ_STOC_dt_ODJ_only$infPerc <- as.numeric(verdier_ODJ_STOC_dt_ODJ_only$infPerc)
# tendance %
pop_central_A <- seq(100, 100 * (verdier_ODJ_STOC_dt_ODJ_only$perc), length.out = length(years))
ecart_bas_A   <- (100 * (verdier_ODJ_STOC_dt_ODJ_only$supPerc)) - (100 * (verdier_ODJ_STOC_dt_ODJ_only$perc))
ecart_haut_A  <- (100 * (verdier_ODJ_STOC_dt_ODJ_only$infPerc)) - (100 * (verdier_ODJ_STOC_dt_ODJ_only$perc))
pop_min_A     <- pop_central_A + ecart_bas_A
pop_max_A     <- pop_central_A + ecart_haut_A

dt_A <- data.frame(
  year = years,
  population = pop_central_A,
  ymin = pop_min_A,
  ymax = pop_max_A,
  protocole = "ODJ"
)

### --- Protocole B ---
verdier_ODJ_STOC_dt_STOC_only <- verdier_ODJ_STOC_dt %>% filter(Protocole == "STOC")
verdier_ODJ_STOC_dt_STOC_only$perc <- as.numeric(verdier_ODJ_STOC_dt_STOC_only$perc)
verdier_ODJ_STOC_dt_STOC_only$supPerc <- as.numeric(verdier_ODJ_STOC_dt_STOC_only$supPerc)
verdier_ODJ_STOC_dt_STOC_only$infPerc <- as.numeric(verdier_ODJ_STOC_dt_STOC_only$infPerc)
# tendance %
pop_central_B <- seq(100, 100 * (1 + verdier_ODJ_STOC_dt_STOC_only$perc), length.out = length(years))
ecart_bas_B   <- (100 * (1 + verdier_ODJ_STOC_dt_STOC_only$supPerc)) - (100 * (1 + verdier_ODJ_STOC_dt_STOC_only$perc))
ecart_haut_B  <- (100 * (1 + verdier_ODJ_STOC_dt_STOC_only$infPerc)) - (100 * (1 + verdier_ODJ_STOC_dt_STOC_only$perc))
pop_min_B     <- pop_central_B + ecart_bas_B
pop_max_B     <- pop_central_B + ecart_haut_B

dt_B <- data.frame(
  year = years,
  population = pop_central_B,
  ymin = pop_min_B,
  ymax = pop_max_B,
  protocole = "STOC"
)

### --- Fusion des deux jeux ---
dt <- bind_rows(dt_A, dt_B)

### --- Subtitle ---

subtitle_verdier <- paste0("ODJ : ", verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="ODJ"], 
                           "% [ ", verdier_ODJ_STOC_dt$infPerc[verdier_ODJ_STOC_dt$Protocole=="ODJ"], "% ; ",
                           verdier_ODJ_STOC_dt$supPerc[verdier_ODJ_STOC_dt$Protocole=="ODJ"], "%]", 
                           "\nSTOC : ", verdier_ODJ_STOC_dt$perc[verdier_ODJ_STOC_dt$Protocole=="STOC"], 
                           "% [ ", verdier_ODJ_STOC_dt$infPerc[verdier_ODJ_STOC_dt$Protocole=="STOC"], "% ; ",
                           verdier_ODJ_STOC_dt$supPerc[verdier_ODJ_STOC_dt$Protocole=="STOC"], "%]")

### --- Graphique ---
verdier_perc_plot <- ggplot(dt, aes(x = year, y = population, color = protocole, fill = protocole)) +
  geom_ribbon(aes(ymin = ymin, ymax = ymax), alpha = 0.2, color = NA) +
  geom_line(size = 1.2) +
  scale_color_manual(values = c("darkgrey", "darkgreen")) +
  scale_fill_manual(values = c("darkgrey", "darkgreen")) + 
  scale_x_continuous(limits = c(2012, 2025), breaks = 2012:2025) +
  labs(
    title = "Verdier d'Europe",
    subtitle = subtitle_verdier,
    x = "Année",
    y = "Population (%)",
    color = "Observatoire",
    fill = "Observatoire"
  ) +
  theme_trends(base_size = 12, color = NA) ; verdier_perc_plot

```

#### ODJ-SHOC

Tendance similaire

```{r}
#| echo: false

verdier_ODJ_SHOC_dt <- comparaison_ODJ_SHOC %>% 
  filter(species == "Verdier d'Europe") %>% 
  select(species, minYear, maxYear, estimate, pval, infIC, supIC, tendance_bilan)

```

```{r}
#| echo: false
#| warning: false
#| fig-height: 5
#| fig-width: 8

verdier_info_ODJ_SHOC <- data.frame(
  slope = verdier_ODJ_SHOC_dt$estimate,
  intercept = - verdier_ODJ_SHOC_dt$estimate * ((2012 + 2025) / 2),
  infIC = verdier_ODJ_SHOC_dt$infIC,
  supIC = verdier_ODJ_SHOC_dt$supIC,
  line = c("ODJ", "SHOC")
)

verdier_info_ODJ_SHOC_plot <- verdier_info_ODJ_SHOC %>%
  mutate(
    slope_min = infIC, 
    slope_max = supIC
  ) %>%
  tidyr::expand_grid(x = seq(2012, 2025, by = 0.1)) %>% 
  mutate(
    y_min = intercept + slope_min * x,
    y_max = intercept + slope_max * x
  )

verdier_ODJ_SHOC_plot <- ggplot(verdier_info_ODJ_SHOC_plot, aes(color = line, fill = line)) +
  geom_ribbon(aes(x = x, ymin = y_min, ymax = y_max, fill = line), alpha = 0.2, color = "white") +
  geom_abline(aes(slope = slope, intercept = intercept, color = line), size = 2) +
  theme_trends(base_size=12, color=NA) +
  scale_color_manual(values = c("darkgrey", "darkblue")) +
  scale_fill_manual(values = c("darkgrey", "darkblue")) + 
  scale_x_continuous(limits = c(2012, 2025), breaks = 2012:2025) +
  scale_y_continuous(limits = c(min(verdier_info_ODJ_SHOC_plot$y_min), 
                                max(verdier_info_ODJ_SHOC_plot$y_max)), 
                     breaks = seq(round(min(verdier_info_ODJ_SHOC_plot$y_min)), 
                                  round(max(verdier_info_ODJ_SHOC_plot$y_max)), by = 15)) +
  labs(x = "Année", y = "Effectifs relatifs", color = "Observatoire", fill = "Observatoire") +
  theme(legend.position = "top") ; verdier_ODJ_SHOC_plot

```

#### V2 from routine 

```{r}
#| echo: false
#| warning: false

sp = "Verdier d'Europe"

dataLT_sp = dataLongTerm[dataLongTerm$species == sp,]
dataLT_sp <- dataLT_sp %>% dplyr::select(-trendEBCC)
dataLT_sp <- na.omit(dataLT_sp)

yearValues = dataLT_sp$minYear:dataLT_sp$maxYear
      
estLT = dataLT_sp$estimate * (yearValues - min(yearValues))
estLT = estLT - mean(estLT)

dataPlot = data.frame(year = yearValues,
                      estimate = exp(estLT),
                      estimate_exp = exp(estLT), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT <- round(dataLT_sp$pval,6)
xSignLT <- dataLT_sp$maxYear + 1 # x-position of the significance
ySignLT <- mean(dataPlot$estimate[dataPlot$year == dataLT_sp$maxYear]) # y-position of the significance

# --- growth rate ---
grLT = dataLT_sp$estimate
grLT = round(grLT, 3)
xGrLT = dataLT_sp$minYear - 1
yGrLT = mean(dataPlot$estimate[dataPlot$year == min(dataPlot$year)])

subtitle <- paste0("ODJ : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]", 
                           "\nSTOC : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]")
# --- plot ---

plot = ggplot() +
  geom_line(data = dataPlot[dataPlot$group == "LT",], aes(x = year, y = estimate),
                     alpha = 1, linewidth = 1.1, color = "darkgrey") +
  annotate(geom = "text", label = signLT, color = "gray", size = 5, x = xSignLT, y = ySignLT) +
  annotate(geom = "text", label = grLT, color = "gray", size = 5, x = xGrLT, y = yGrLT) +
  geom_hline(yintercept = yRef, col = "gray", linetype = "dashed", linewidth = 1.01) +
  ggtitle(sp) +
  scale_x_continuous(breaks = yearValues, limits = c(dataLT_sp$minYear - 1, dataLT_sp$maxYear +1)) +
  scale_y_continuous(breaks = seq(0.7, 1.4, by = 0.1), limits = c(0.7, 1.4)) +
  theme_trends(base_size = 12, color = NA) +
  labs(
    title = "Verdier d'Europe",
    subtitle = subtitle,
    x = "Année",
    y = "Abondance relative",
    color = "Observatoire",
    fill = "Observatoire"
  ) + 
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
                 legend.text = element_text(size = 14),
                 axis.text = element_text(size = 14),
                 axis.title = element_text(size = 18),
                 title = element_text(size = 15),
                 panel.grid.minor = element_blank(),
                 legend.position = "top",
                 legend.justification = "left") ; plot 

```


### !!! Sittelle torchepot

différence pour hiver avec explications

#### ODJ-STOC

Tendance similaire

```{r}
#| echo: false

sittelle_ODJ_STOC_dt <- comparaison_ODJ_STOC %>% 
  filter(species == "Sittelle torchepot") %>% 
  select(species, minYear, maxYear, estimate, pval, infIC, supIC, tendance_bilan)

```

```{r}
#| echo: false
#| warning: false
#| fig-height: 4
#| fig-width: 8

sittelle_info_ODJ_STOC <- data.frame(
  slope = sittelle_ODJ_STOC_dt$estimate,
  intercept = - sittelle_ODJ_STOC_dt$estimate * ((2012 + 2025) / 2),
  infIC = sittelle_ODJ_STOC_dt$infIC,
  supIC = sittelle_ODJ_STOC_dt$supIC,
  line = c("ODJ", "STOC")
)

sittelle_info_ODJ_STOC_plot <- sittelle_info_ODJ_STOC %>%
  mutate(
    slope_min = infIC, 
    slope_max = supIC
  ) %>%
  tidyr::expand_grid(x = seq(2012, 2025, by = 0.1)) %>% 
  mutate(
    y_min = intercept + slope_min * x,
    y_max = intercept + slope_max * x
  )

sittelle_ODJ_STOC_plot <- ggplot(sittelle_info_ODJ_STOC_plot, aes(color = line, fill = line)) +
  geom_ribbon(aes(x = x, ymin = y_min, ymax = y_max, fill = line), alpha = 0.2, color = "white") +
  geom_abline(aes(slope = slope, intercept = intercept, color = line), size = 2) +
  theme_trends(base_size=12, color=NA) +
  scale_color_manual(values = c("darkgrey", "darkgreen")) +
  scale_fill_manual(values = c("darkgrey", "darkgreen")) + 
  scale_x_continuous(limits = c(2012, 2025), breaks = 2012:2025) +
  scale_y_continuous(limits = c(min(sittelle_info_ODJ_STOC_plot$y_min), 
                                max(sittelle_info_ODJ_STOC_plot$y_max)), 
                     breaks = seq(round(min(sittelle_info_ODJ_STOC_plot$y_min)), 
                                  round(max(sittelle_info_ODJ_STOC_plot$y_max)), by = 15)) +
  labs(x = "Année", y = "Effectifs relatifs", color = "Observatoire", fill = "Observatoire") +
  theme(legend.position = "top") ; sittelle_ODJ_STOC_plot

```

#### ODJ-SHOC

Tendance similaire

```{r}
#| echo: false

sittelle_ODJ_SHOC_dt <- comparaison_ODJ_SHOC %>% 
  filter(species == "Sittelle torchepot") %>% 
  select(species, minYear, maxYear, estimate, pval, infIC, supIC, tendance_bilan)

```

```{r}
#| echo: false
#| warning: false
#| fig-height: 4
#| fig-width: 8

sittelle_info_ODJ_SHOC <- data.frame(
  slope = sittelle_ODJ_SHOC_dt$estimate,
  intercept = - sittelle_ODJ_SHOC_dt$estimate * ((2012 + 2025) / 2),
  infIC = sittelle_ODJ_SHOC_dt$infIC,
  supIC = sittelle_ODJ_SHOC_dt$supIC,
  line = c("ODJ", "SHOC")
)

sittelle_info_ODJ_SHOC_plot <- sittelle_info_ODJ_SHOC %>%
  mutate(
    slope_min = infIC, 
    slope_max = supIC
  ) %>%
  tidyr::expand_grid(x = seq(2012, 2025, by = 0.1)) %>% 
  mutate(
    y_min = intercept + slope_min * x,
    y_max = intercept + slope_max * x
  )

sittelle_ODJ_SHOC_plot <- ggplot(sittelle_info_ODJ_SHOC_plot, aes(color = line, fill = line)) +
  geom_ribbon(aes(x = x, ymin = y_min, ymax = y_max, fill = line), alpha = 0.2, color = "white") +
  geom_abline(aes(slope = slope, intercept = intercept, color = line), size = 2) +
  theme_trends(base_size=12, color=NA) +
  scale_color_manual(values = c("darkgrey", "darkblue")) +
  scale_fill_manual(values = c("darkgrey", "darkblue")) + 
  scale_x_continuous(limits = c(2012, 2025), breaks = 2012:2025) +
  scale_y_continuous(limits = c(min(sittelle_info_ODJ_SHOC_plot$y_min), 
                                max(sittelle_info_ODJ_SHOC_plot$y_max)), 
                     breaks = seq(round(min(sittelle_info_ODJ_SHOC_plot$y_min)), 
                                  round(max(sittelle_info_ODJ_SHOC_plot$y_max)), by = 15)) +
  labs(x = "Année", y = "Effectifs relatifs", color = "Observatoire", fill = "Observatoire") +
  theme(legend.position = "top") ; sittelle_ODJ_SHOC_plot

```

```{r}
#| echo: false
#| warning: false

sp = "Sittelle torchepot"

dataLT_sp = dataLongTerm[dataLongTerm$species == sp,]
dataLT_sp <- dataLT_sp %>% dplyr::select(-trendEBCC)
dataLT_sp <- na.omit(dataLT_sp)

yearValues = dataLT_sp$minYear:dataLT_sp$maxYear
      
estLT = dataLT_sp$estimate * (yearValues - min(yearValues))
estLT = estLT - mean(estLT)

dataPlot = data.frame(year = yearValues,
                      estimate = exp(estLT),
                      estimate_exp = exp(estLT), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT <- round(dataLT_sp$pval,3)
xSignLT <- dataLT_sp$maxYear + 1 # x-position of the significance
ySignLT <- mean(dataPlot$estimate[dataPlot$year == dataLT_sp$maxYear]) # y-position of the significance

# --- growth rate ---
grLT = dataLT_sp$estimate
grLT = round(grLT, 3)
xGrLT = dataLT_sp$minYear - 1
yGrLT = mean(dataPlot$estimate[dataPlot$year == min(dataPlot$year)])

subtitle <- paste0("ODJ : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]", 
                           "\nSTOC : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]")
# --- plot ---

plot = ggplot() +
  geom_line(data = dataPlot[dataPlot$group == "LT",], aes(x = year, y = estimate),
                     alpha = 1, linewidth = 1.1, color = "darkgrey") +
  annotate(geom = "text", label = signLT, color = "gray", size = 5, x = xSignLT, y = ySignLT) +
  annotate(geom = "text", label = grLT, color = "gray", size = 5, x = xGrLT, y = yGrLT) +
  geom_hline(yintercept = yRef, col = "gray", linetype = "dashed", linewidth = 1.01) +
  ggtitle(sp) +
  scale_x_continuous(breaks = yearValues, limits = c(dataLT_sp$minYear - 1, dataLT_sp$maxYear +1)) +
  scale_y_continuous(breaks = seq(0.7, 1.4, by = 0.1), limits = c(0.7, 1.4)) +
  theme_trends(base_size = 12, color = NA) +
  labs(
    title = sp,
    subtitle = subtitle,
    x = "Année",
    y = "Abondance relative",
    color = "Observatoire",
    fill = "Observatoire"
  ) + 
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
                 legend.text = element_text(size = 14),
                 axis.text = element_text(size = 14),
                 axis.title = element_text(size = 18),
                 title = element_text(size = 15),
                 panel.grid.minor = element_blank(),
                 legend.position = "top",
                 legend.justification = "left") ; plot 

```

### !!! Grosbec casse noyaux 

tendances opposées

```{r}
#| echo: false
#| warning: false

sp = "Grosbec casse-noyaux"

dataLT_sp = dataLongTerm[dataLongTerm$species == sp,]
dataLT_sp <- dataLT_sp %>% dplyr::select(-trendEBCC)
dataLT_sp <- na.omit(dataLT_sp)

yearValues = dataLT_sp$minYear:dataLT_sp$maxYear
      
estLT = dataLT_sp$estimate * (yearValues - min(yearValues))
estLT = estLT - mean(estLT)

dataPlot = data.frame(year = yearValues,
                      estimate = exp(estLT),
                      estimate_exp = exp(estLT), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT <- round(dataLT_sp$pval,6)
xSignLT <- dataLT_sp$maxYear + 1 # x-position of the significance
ySignLT <- mean(dataPlot$estimate[dataPlot$year == dataLT_sp$maxYear]) # y-position of the significance

# --- growth rate ---
grLT = dataLT_sp$estimate
grLT = round(grLT, 3)
xGrLT = dataLT_sp$minYear - 1
yGrLT = mean(dataPlot$estimate[dataPlot$year == min(dataPlot$year)])

subtitle <- paste0("ODJ : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]", 
                           "\nSTOC : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]")
# --- plot ---

plot = ggplot() +
  geom_line(data = dataPlot[dataPlot$group == "LT",], aes(x = year, y = estimate),
                     alpha = 1, linewidth = 1.1, color = "darkgrey") +
  annotate(geom = "text", label = signLT, color = "gray", size = 5, x = xSignLT, y = ySignLT) +
  annotate(geom = "text", label = grLT, color = "gray", size = 5, x = xGrLT, y = yGrLT) +
  geom_hline(yintercept = yRef, col = "gray", linetype = "dashed", linewidth = 1.01) +
  ggtitle(sp) +
  scale_x_continuous(breaks = yearValues, limits = c(dataLT_sp$minYear - 1, dataLT_sp$maxYear +1)) +
  scale_y_continuous(breaks = seq(0.7, 1.4, by = 0.1), limits = c(0.7, 1.4)) +
  theme_trends(base_size = 12, color = NA) +
  labs(
    title = "Verdier d'Europe",
    subtitle = subtitle,
    x = "Année",
    y = "Abondance relative",
    color = "Observatoire",
    fill = "Observatoire"
  ) + 
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
                 legend.text = element_text(size = 14),
                 axis.text = element_text(size = 14),
                 axis.title = element_text(size = 18),
                 title = element_text(size = 15),
                 panel.grid.minor = element_blank(),
                 legend.position = "top",
                 legend.justification = "left") ; plot 

```

### !!! Rougegorge

tendances similaires été et hiver

```{r}
#| echo: false
#| warning: false

sp = "Rougegorge familier"

dataLT_sp = dataLongTerm[dataLongTerm$species == sp,]
dataLT_sp <- dataLT_sp %>% dplyr::select(-trendEBCC)
dataLT_sp <- na.omit(dataLT_sp)

yearValues = dataLT_sp$minYear:dataLT_sp$maxYear
      
estLT = dataLT_sp$estimate * (yearValues - min(yearValues))
estLT = estLT - mean(estLT)

dataPlot = data.frame(year = yearValues,
                      estimate = exp(estLT),
                      estimate_exp = exp(estLT), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT <- round(dataLT_sp$pval,4)
xSignLT <- dataLT_sp$maxYear + 1 # x-position of the significance
ySignLT <- mean(dataPlot$estimate[dataPlot$year == dataLT_sp$maxYear]) # y-position of the significance

# --- growth rate ---
grLT = dataLT_sp$estimate
grLT = round(grLT, 3)
xGrLT = dataLT_sp$minYear - 1
yGrLT = mean(dataPlot$estimate[dataPlot$year == min(dataPlot$year)])

subtitle <- paste0("ODJ : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]", 
                           "\nSTOC : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]")
# --- plot ---

plot = ggplot() +
  geom_line(data = dataPlot[dataPlot$group == "LT",], aes(x = year, y = estimate),
                     alpha = 1, linewidth = 1.1, color = "darkgrey") +
  annotate(geom = "text", label = signLT, color = "gray", size = 5, x = xSignLT, y = ySignLT) +
  annotate(geom = "text", label = grLT, color = "gray", size = 5, x = xGrLT, y = yGrLT) +
  geom_hline(yintercept = yRef, col = "gray", linetype = "dashed", linewidth = 1.01) +
  ggtitle(sp) +
  scale_x_continuous(breaks = yearValues, limits = c(dataLT_sp$minYear - 1, dataLT_sp$maxYear +1)) +
  scale_y_continuous(breaks = seq(0.7, 1.4, by = 0.1), limits = c(0.7, 1.4)) +
  theme_trends(base_size = 12, color = NA) +
  labs(
    title = "Rougegorge familier",
    subtitle = subtitle,
    x = "Année",
    y = "Abondance relative",
    color = "Observatoire",
    fill = "Observatoire"
  ) + 
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
                 legend.text = element_text(size = 14),
                 axis.text = element_text(size = 14),
                 axis.title = element_text(size = 18),
                 title = element_text(size = 15),
                 panel.grid.minor = element_blank(),
                 legend.position = "top",
                 legend.justification = "left") ; plot 

```

### !!! Mésange bleue

tendances similaires

```{r}
#| echo: false
#| warning: false

sp = "Mesange bleue"

dataLT_sp = dataLongTerm[dataLongTerm$species == sp,]
dataLT_sp <- dataLT_sp %>% dplyr::select(-trendEBCC)
dataLT_sp <- na.omit(dataLT_sp)

yearValues = dataLT_sp$minYear:dataLT_sp$maxYear
      
estLT = dataLT_sp$estimate * (yearValues - min(yearValues))
estLT = estLT - mean(estLT)

dataPlot = data.frame(year = yearValues,
                      estimate = exp(estLT),
                      estimate_exp = exp(estLT), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT <- round(dataLT_sp$pval,3)
xSignLT <- dataLT_sp$maxYear + 1 # x-position of the significance
ySignLT <- mean(dataPlot$estimate[dataPlot$year == dataLT_sp$maxYear]) # y-position of the significance

# --- growth rate ---
grLT = dataLT_sp$estimate
grLT = round(grLT, 3)
xGrLT = dataLT_sp$minYear - 1
yGrLT = mean(dataPlot$estimate[dataPlot$year == min(dataPlot$year)])

subtitle <- paste0("ODJ : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]", 
                           "\nSTOC : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]")
# --- plot ---

plot = ggplot() +
  geom_line(data = dataPlot[dataPlot$group == "LT",], aes(x = year, y = estimate),
                     alpha = 1, linewidth = 1.1, color = "darkgrey") +
  annotate(geom = "text", label = signLT, color = "gray", size = 5, x = xSignLT, y = ySignLT) +
  annotate(geom = "text", label = grLT, color = "gray", size = 5, x = xGrLT, y = yGrLT) +
  geom_hline(yintercept = yRef, col = "gray", linetype = "dashed", linewidth = 1.01) +
  ggtitle(sp) +
  scale_x_continuous(breaks = yearValues, limits = c(dataLT_sp$minYear - 1, dataLT_sp$maxYear +1)) +
  scale_y_continuous(breaks = seq(0.7, 1.4, by = 0.1), limits = c(0.7, 1.4)) +
  theme_trends(base_size = 12, color = NA) +
  labs(
    title = sp,
    subtitle = subtitle,
    x = "Année",
    y = "Abondance relative",
    color = "Observatoire",
    fill = "Observatoire"
  ) + 
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
                 legend.text = element_text(size = 14),
                 axis.text = element_text(size = 14),
                 axis.title = element_text(size = 18),
                 title = element_text(size = 15),
                 panel.grid.minor = element_blank(),
                 legend.position = "top",
                 legend.justification = "left") ; plot 

```

### !!! Pinson des arbres

tendances similaires

```{r}
#| echo: false
#| warning: false

sp = "Pinson des arbres"

dataLT_sp = dataLongTerm[dataLongTerm$species == sp,]
dataLT_sp <- dataLT_sp %>% dplyr::select(-trendEBCC)
dataLT_sp <- na.omit(dataLT_sp)

yearValues = dataLT_sp$minYear:dataLT_sp$maxYear
      
estLT = dataLT_sp$estimate * (yearValues - min(yearValues))
estLT = estLT - mean(estLT)

dataPlot = data.frame(year = yearValues,
                      estimate = exp(estLT),
                      estimate_exp = exp(estLT), # modified
                      infIC = NA,
                      supIC = NA,
                      group = "LT",
                      rep = 1)

yRef = 1 # yRef = ifelse(distribution == "gaussian", 0, 1)

# --- significance ---
signLT <- round(dataLT_sp$pval,3)
xSignLT <- dataLT_sp$maxYear + 1 # x-position of the significance
ySignLT <- mean(dataPlot$estimate[dataPlot$year == dataLT_sp$maxYear]) # y-position of the significance

# --- growth rate ---
grLT = dataLT_sp$estimate
grLT = round(grLT, 3)
xGrLT = dataLT_sp$minYear - 1
yGrLT = mean(dataPlot$estimate[dataPlot$year == min(dataPlot$year)])

subtitle <- paste0("ODJ : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]", 
                           "\nSTOC : ", dataLT_sp$perc, 
                           "% [ ", dataLT_sp$infPerc, "% ; ",
                           dataLT_sp$supPerc, "%]")
# --- plot ---

plot = ggplot() +
  geom_line(data = dataPlot[dataPlot$group == "LT",], aes(x = year, y = estimate),
                     alpha = 1, linewidth = 1.1, color = "darkgrey") +
  annotate(geom = "text", label = signLT, color = "gray", size = 5, x = xSignLT, y = ySignLT) +
  annotate(geom = "text", label = grLT, color = "gray", size = 5, x = xGrLT, y = yGrLT) +
  geom_hline(yintercept = yRef, col = "gray", linetype = "dashed", linewidth = 1.01) +
  ggtitle(sp) +
  scale_x_continuous(breaks = yearValues, limits = c(dataLT_sp$minYear - 1, dataLT_sp$maxYear +1)) +
  scale_y_continuous(breaks = seq(0.7, 1.4, by = 0.1), limits = c(0.7, 1.4)) +
  theme_trends(base_size = 12, color = NA) +
  labs(
    title = sp,
    subtitle = subtitle,
    x = "Année",
    y = "Abondance relative",
    color = "Observatoire",
    fill = "Observatoire"
  ) + 
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
                 legend.text = element_text(size = 14),
                 axis.text = element_text(size = 14),
                 axis.title = element_text(size = 18),
                 title = element_text(size = 15),
                 panel.grid.minor = element_blank(),
                 legend.position = "top",
                 legend.justification = "left") ; plot 

```
